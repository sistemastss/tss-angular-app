{"version":3,"sources":["webpack:///./src/app/pages/shared/services/esp.service.ts","webpack:///./src/app/pages/shared/services/index.ts","webpack:///./src/app/pages/shared/services/investigacion.service.ts","webpack:///./src/app/pages/shared/services/poligrafia.service.ts","webpack:///./src/app/services/helper.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HelperService } from '../../../services/helper.service';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EspService {\n\n  constructor(\n    private http: HttpClient,\n    private helper: HelperService,\n  ) { }\n\n  fetch() {\n    const url = this.helper.route('esp');\n    return this.http.get(url).pipe(\n      map((value: any) => value.data)\n    );\n  }\n\n  save(payload) {\n    const url = this.helper.route('esp');\n    return this.http.post(url, payload);\n  }\n}\n","export * from './esp.service';\r\nexport * from './investigacion.service';\r\nexport * from './poligrafia.service';\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { HelperService } from '../../../services/helper.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InvestigacionService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private helper: HelperService,\r\n  ) {}\r\n\r\n  fetch() {\r\n    const url = this.helper.route('investigacion');\r\n    return this.http.get(url).pipe(\r\n      map((value: any) => value.data)\r\n    );\r\n  }\r\n\r\n  save(payload) {\r\n    const url = this.helper.route('investigacion');\r\n    return this.http.post(url, payload);\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {map} from 'rxjs/operators';\r\nimport { HelperService } from '../../../services/helper.service';\r\nimport { servicio } from '../../control/types';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PoligrafiaService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private helper: HelperService,\r\n  ) {}\r\n\r\n  fetch() {\r\n    const url = this.helper.route('poligrafia');\r\n    return this.http.get(url).pipe(\r\n      map((value: servicio) => value.data)\r\n    );\r\n  }\r\n\r\n  save(payload) {\r\n    const url = this.helper.route('poligrafia');\r\n    return this.http.post(url, payload);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\n@Injectable({\n  providedIn: 'root'\n})\nexport class HelperService {\n\n  constructor(\n  ) { }\n\n  route(values: any, params: any = null): string {\n    let url = environment.api;\n\n    if (Array.isArray(values)) {\n      values.forEach((value, index) => {\n\n        if (params[index]) {\n          url += `/${value}/${params[index]}`;\n\n        } else if (params !== null) {\n\n          if (index === 0) {\n            url += `/${value}/${params}`;\n\n          } else {\n            url += `/${value}`;\n\n          }\n        } else {\n          url += `/${value}`;\n\n        }\n      });\n    } else {\n      if (!params) {\n        url += `/${values}`;\n      } else {\n        url += `/${values}/${params}`;\n      }\n    }\n    return url;\n  }\n\n  readFile(file) {\n    const fileReader = new FileReader();\n\n    return new Promise((resolve, reject) => {\n      fileReader.onerror = () => {\n        fileReader.abort();\n        reject(new DOMException('Problem parsing input file.'));\n      };\n\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n      };\n      fileReader.readAsDataURL(file);\n    });\n  }\n\n  makeFileUrl(fileName: string): string {\n    return this.route('files', fileName);\n  }\n}\n"],"sourceRoot":""}