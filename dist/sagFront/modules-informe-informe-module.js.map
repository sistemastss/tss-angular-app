{"version":3,"sources":["webpack:///./src/app/pages/modules/informe/components/datos-personales/datos-personales.component.html","webpack:///./src/app/pages/modules/informe/components/datos-personales/datos-personales.component.ts","webpack:///./src/app/pages/modules/informe/components/datos-personales/estado-salud/estado-salud.component.html","webpack:///./src/app/pages/modules/informe/components/datos-personales/estado-salud/estado-salud.component.ts","webpack:///./src/app/pages/modules/informe/components/datos-personales/habitos-salud/habitos-salud.component.html","webpack:///./src/app/pages/modules/informe/components/datos-personales/habitos-salud/habitos-salud.component.ts","webpack:///./src/app/pages/modules/informe/components/datos-personales/info-personal/info-personal.component.html","webpack:///./src/app/pages/modules/informe/components/datos-personales/info-personal/info-personal.component.ts","webpack:///./src/app/pages/modules/informe/components/estudio-seguridad/estudio-seguridad.component.html","webpack:///./src/app/pages/modules/informe/components/estudio-seguridad/estudio-seguridad.component.ts","webpack:///./src/app/pages/modules/informe/components/historial-laboral-academico/historial-laboral-academico.component.html","webpack:///./src/app/pages/modules/informe/components/historial-laboral-academico/historial-laboral-academico.component.ts","webpack:///./src/app/pages/modules/informe/components/historial-laboral-academico/historial-laboral/historial-laboral.component.html","webpack:///./src/app/pages/modules/informe/components/historial-laboral-academico/historial-laboral/historial-laboral.component.ts","webpack:///./src/app/pages/modules/informe/components/historial-laboral-academico/nivel-academico/nivel-academico.component.html","webpack:///./src/app/pages/modules/informe/components/historial-laboral-academico/nivel-academico/nivel-academico.component.ts","webpack:///./src/app/pages/modules/informe/components/informacion-familiar/familia.component.html","webpack:///./src/app/pages/modules/informe/components/informacion-familiar/familia.component.ts","webpack:///./src/app/pages/modules/informe/components/informacion-familiar/hijos/hijos.component.html","webpack:///./src/app/pages/modules/informe/components/informacion-familiar/hijos/hijos.component.ts","webpack:///./src/app/pages/modules/informe/components/informacion-familiar/informacion-familiar/informacion-familiar.component.html","webpack:///./src/app/pages/modules/informe/components/informacion-familiar/informacion-familiar/informacion-familiar.component.ts","webpack:///./src/app/pages/modules/informe/components/informacion-familiar/nucleo-familiar/nucleo-familiar.component.html","webpack:///./src/app/pages/modules/informe/components/informacion-familiar/nucleo-familiar/nucleo-familiar.component.ts","webpack:///./src/app/pages/modules/informe/components/informacion-familiar/referencias/referencias.component.html","webpack:///./src/app/pages/modules/informe/components/informacion-familiar/referencias/referencias.component.ts","webpack:///./src/app/pages/modules/informe/components/informe2/condiciones-inmueble/condiciones-inmueble.component.html","webpack:///./src/app/pages/modules/informe/components/informe2/condiciones-inmueble/condiciones-inmueble.component.ts","webpack:///./src/app/pages/modules/informe/components/informe2/condiciones-sector/condiciones-sector.component.html","webpack:///./src/app/pages/modules/informe/components/informe2/condiciones-sector/condiciones-sector.component.ts","webpack:///./src/app/pages/modules/informe/components/informe2/entorno-habitacional/entorno-habitacional.component.html","webpack:///./src/app/pages/modules/informe/components/informe2/entorno-habitacional/entorno-habitacional.component.ts","webpack:///./src/app/pages/modules/informe/components/informe2/informe2.component.html","webpack:///./src/app/pages/modules/informe/components/informe2/informe2.component.ts","webpack:///./src/app/pages/modules/informe/components/main/main.component.html","webpack:///./src/app/pages/modules/informe/components/main/main.component.ts","webpack:///./src/app/pages/modules/informe/components/modus-vivendi/capacidad-endeudamiento/capacidad-endeudamiento.component.html","webpack:///./src/app/pages/modules/informe/components/modus-vivendi/capacidad-endeudamiento/capacidad-endeudamiento.component.ts","webpack:///./src/app/pages/modules/informe/components/modus-vivendi/egresos/egresos.component.html","webpack:///./src/app/pages/modules/informe/components/modus-vivendi/egresos/egresos.component.ts","webpack:///./src/app/pages/modules/informe/components/modus-vivendi/ingresos/ingresos.component.html","webpack:///./src/app/pages/modules/informe/components/modus-vivendi/ingresos/ingresos.component.ts","webpack:///./src/app/pages/modules/informe/components/modus-vivendi/inmuebles/inmuebles.component.html","webpack:///./src/app/pages/modules/informe/components/modus-vivendi/inmuebles/inmuebles.component.ts","webpack:///./src/app/pages/modules/informe/components/modus-vivendi/modus-vivendi.component.html","webpack:///./src/app/pages/modules/informe/components/modus-vivendi/modus-vivendi.component.ts","webpack:///./src/app/pages/modules/informe/components/modus-vivendi/muebles/muebles.component.html","webpack:///./src/app/pages/modules/informe/components/modus-vivendi/muebles/muebles.component.ts","webpack:///./src/app/pages/modules/informe/components/modus-vivendi/referencias-bancarias/referencias-bancarias.component.html","webpack:///./src/app/pages/modules/informe/components/modus-vivendi/referencias-bancarias/referencias-bancarias.component.ts","webpack:///./src/app/pages/modules/informe/informe-routing.module.ts","webpack:///./src/app/pages/modules/informe/informe.module.ts","webpack:///./src/app/pages/modules/informe/services/datos-personales/info-personal.service.ts","webpack:///./src/app/pages/modules/informe/services/informe.service.ts","webpack:///./src/app/pages/modules/informe/services/informe/estudio-seguridad.service.ts","webpack:///./src/app/pages/modules/informe/store/actions/informe.actions.ts","webpack:///./src/app/pages/modules/informe/store/effects/informe.effects.ts","webpack:///./src/app/pages/modules/informe/store/reducers/informe.reducer.ts"],"names":[],"mappings":"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","file":"modules-informe-informe-module.js","sourcesContent":["module.exports = \"<div class=\\\"card-header bg-white\\\">\\n  <h4 class=\\\"text-center\\\">Estudio de seguridad</h4>\\n</div>\\n<div class=\\\"card-body bg-light\\\">\\n\\n  <!-- Informacion personal card-->\\n  <app-info-personal></app-info-personal>\\n\\n  <!-- Estado de salud-->\\n  <app-estado-salud></app-estado-salud>\\n\\n  <!-- Habitos en salud-->\\n  <app-habitos-salud></app-habitos-salud>\\n\\n</div>\\n<div class=\\\"card-footer text-right\\\">\\n  <button class=\\\"btn btn-primary\\\">Guardar</button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { EstadoSaludService } from '../../services/datos-personales/estado-salud.service';\n\n@Component({\n  selector: 'app-datos-personales',\n  templateUrl: './datos-personales.component.html',\n  styles: []\n})\nexport class DatosPersonalesComponent implements OnInit {\n\n  constructor(\n  ) { }\n\n  ngOnInit() {\n  }\n\n  saveAll() {\n  }\n\n\n\n}\n","module.exports = \"<div class=\\\"col-md-10 mx-auto card mb-4\\\">\\n  <div [formGroup]=\\\"form\\\"  class=\\\"card-body\\\">\\n    <b class=\\\"card-title\\\">Estado de salud</b>\\n    <hr>\\n\\n    <!-- toma medicamentos -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"tomaMedicamentos\\\">\\n        ¿Toma medicamentos en la actualidad?\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n               id=\\\"tomaMedicamentos\\\"\\n               formControlName=\\\"tomaMedicamentos\\\"\\n               required>\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['tomaMedicamentos'].invalid &&\\n           form.controls['tomaMedicamentos'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- sufre enfermedades -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"sufreEnfermedades\\\">\\n        ¿Sufre alguna Enfermedad?\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n               id=\\\"sufreEnfermedades\\\"\\n               formControlName=\\\"sufreEnfermedades\\\">\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['sufreEnfermedades'].invalid &&\\n           form.controls['sufreEnfermedades'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- tratamiento psicologico -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"tratamientoPsicologico\\\">\\n        ¿Ha sido sometido a algún tipo de tratamiento psicológico?\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n               id=\\\"tratamientoPsicologico\\\"\\n               formControlName=\\\"tratamientoPsicologico\\\">\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['tratamientoPsicologico'].invalid &&\\n           form.controls['tratamientoPsicologico'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-estado-salud',\n  templateUrl: './estado-salud.component.html',\n  styles: []\n})\nexport class EstadoSaludComponent implements OnInit {\n\n  form = this.fb.group({\n    id                     : '',\n    tomaMedicamentos       : ['', Validators.required],\n    sufreEnfermedades      : ['', Validators.required],\n    tratamientoPsicologico : ['', Validators.required],\n  });\n\n  constructor(\n    private fb: FormBuilder,\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"col-md-10 mx-auto card mb-4\\\">\\n  <div [formGroup]=\\\"form\\\" class=\\\"card-body\\\">\\n    <b class=\\\"card-title\\\">Habitos de salud</b>\\n    <hr>\\n\\n    <!-- fuma -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\">¿Fuma?</label>\\n      <div class=\\\"col-sm-8\\\">\\n        <div class=\\\"form-check form-check-inline\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"radio\\\"\\n                 name=\\\"fuma\\\" id=\\\"fuma\\\"\\n                 [value]=\\\"true\\\" formControlName=\\\"fuma\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"fuma\\\">Si</label>\\n        </div>\\n        <div class=\\\"form-check form-check-inline\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"radio\\\"\\n                 name=\\\"fuma\\\" id=\\\"fuman\\\"\\n                 [value]=\\\"false\\\" formControlName=\\\"fuma\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"fuman\\\">No</label>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- ¿Consume bebidas alcohólicas? -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\">¿Consume bebidas alcohólicas?</label>\\n      <div class=\\\"col-sm-8\\\">\\n        <div class=\\\"form-check form-check-inline\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"radio\\\"\\n                 name=\\\"consumeAlcohol\\\" id=\\\"consumeAlcohol\\\"\\n                 [value]=\\\"true\\\" formControlName=\\\"consumeAlcohol\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"consumeAlcohol\\\">Si</label>\\n        </div>\\n        <div class=\\\"form-check form-check-inline\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"radio\\\"\\n                 name=\\\"consumeAlcohol\\\" id=\\\"consumeAlcoholn\\\"\\n                 [value]=\\\"false\\\" formControlName=\\\"consumeAlcohol\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"consumeAlcoholn\\\">No</label>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- ¿Consume sustancias psicoactivas?\\t-->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\">¿Consume sustancias psicoactivas?</label>\\n      <div class=\\\"col-sm-8\\\">\\n        <div class=\\\"form-check form-check-inline\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"radio\\\"\\n                 name=\\\"consumeDrogas\\\" id=\\\"consumeDrogas\\\"\\n                 [value]=\\\"true\\\" formControlName=\\\"consumeDrogas\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"consumeDrogas\\\">Si</label>\\n        </div>\\n        <div class=\\\"form-check form-check-inline\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"radio\\\"\\n                 name=\\\"consumeDrogas\\\" id=\\\"consumeDrogasn\\\"\\n                 [value]=\\\"false\\\" formControlName=\\\"consumeDrogas\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"consumeDrogasn\\\">No</label>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- ¿Realiza algún deporte? -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"realizaDeporte\\\">¿Realiza algún deporte?</label>\\n      <div class=\\\"col-sm-9\\\">\\n        <textarea class=\\\"form-control\\\"\\n                  id=\\\"realizaDeporte\\\" name=\\\"realizaDeporte\\\"\\n                  formControlName=\\\"realizaDeporte\\\" rows=\\\"3\\\"\\n                  placeholder=\\\"Ingresé los deportes que practica\\\">\\n\\n        </textarea>\\n      </div>\\n    </div>\\n\\n    <!-- ¿Qué actividades realiza en su tiempo libre? -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"hobbies\\\">¿Qué actividades realiza en su tiempo libre?</label>\\n      <div class=\\\"col-sm-9\\\">\\n        <textarea class=\\\"form-control\\\"\\n                  id=\\\"hobbies\\\" name=\\\"hobbies\\\"\\n                  formControlName=\\\"hobbies\\\" rows=\\\"3\\\"\\n                  placeholder=\\\"Ingresé las actividades que realiza\\\">\\n\\n        </textarea>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-habitos-salud',\n  templateUrl: './habitos-salud.component.html',\n  styles: []\n})\nexport class HabitosSaludComponent implements OnInit {\n\n  form = this.fb.group({\n    id              : '',\n    fuma            : [ false, Validators.required ],\n    consumeAlcohol  : [ false, Validators.required ],\n    consumeDrogas   : [ false, Validators.required ],\n    realizaDeporte  : [ '', Validators.required ],\n    hobbies         : [ '', Validators.required ],\n  });\n\n  constructor(\n    private fb: FormBuilder,\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"col-md-10 mx-auto card mb-4\\\">\\n  <div [formGroup]=\\\"form\\\"  class=\\\"card-body\\\">\\n    <b class=\\\"card-title\\\">Información personal</b>\\n    <hr>\\n    <!-- nombres -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"nombre\\\">\\n        Nombres\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n               id=\\\"nombre\\\"\\n               formControlName=\\\"nombre\\\"\\n               required>\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.get('nombre').invalid && form.get('nombre').dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Documento -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"documento\\\">\\n        Documento\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n               id=\\\"documento\\\"\\n               formControlName=\\\"documento\\\"\\n               required>\\n        <div [hidden]=\\\"form.get('documento').valid || form.get('documento').pristine\\\">\\n          <div class=\\\"ng-invalid-feedback\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- fecha expedicion -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"fechaExpedicion\\\">\\n        Fecha de expedicion\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n        <input type=\\\"date\\\" class=\\\"form-control\\\"\\n               id=\\\"fechaExpedicion\\\"\\n               formControlName=\\\"fechaExpedicion\\\"\\n               required>\\n        <div [hidden]=\\\"form.get('fechaExpedicion').valid || form.get('fechaExpedicion').pristine\\\">\\n          <div class=\\\"ng-invalid-feedback\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Lugar de expedicion -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"lugarExpedicion\\\">\\n        Lugar de expedicion\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n               id=\\\"lugarExpedicion\\\"\\n               formControlName=\\\"lugarExpedicion\\\"\\n               required>\\n        <div [hidden]=\\\"form.get('lugarExpedicion').valid || form.get('lugarExpedicion').pristine\\\">\\n          <div class=\\\"ng-invalid-feedback\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Libreta militar -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"libretaMilitar\\\">\\n        Libreta militar\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n\\n        <input type=\\\"number\\\" class=\\\"form-control\\\"\\n               id=\\\"libretaMilitar\\\"\\n               formControlName=\\\"libretaMilitar\\\"\\n               required>\\n        <div [hidden]=\\\"form.get('libretaMilitar').valid || form.get('libretaMilitar').pristine\\\">\\n          <div class=\\\"ng-invalid-feedback\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Lugar de nacimiento -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"lugarNacimiento\\\">\\n        Lugar de nacimiento\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n               id=\\\"lugarNacimiento\\\"\\n               formControlName=\\\"lugarNacimiento\\\"\\n               required>\\n        <div [hidden]=\\\"form.get('lugarNacimiento').valid || form.get('lugarNacimiento').pristine\\\">\\n          <div class=\\\"ng-invalid-feedback\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Fecha de nacimiento -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"fechaNacimiento\\\">\\n        Fecha de nacimiento\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n\\n        <input type=\\\"date\\\" class=\\\"form-control\\\"\\n               id=\\\"fechaNacimiento\\\"\\n               formControlName=\\\"fechaNacimiento\\\"\\n               required>\\n        <div [hidden]=\\\"form.get('fechaNacimiento').valid || form.get('fechaNacimiento').pristine\\\">\\n          <div class=\\\"ng-invalid-feedback\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Edad -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"edad\\\">\\n        Edad\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n               id=\\\"edad\\\"\\n               formControlName=\\\"edad\\\"\\n               required>\\n        <div [hidden]=\\\"form.get('edad').valid || form.get('edad').pristine\\\">\\n          <div class=\\\"ng-invalid-feedback\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Direccion de residencia -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"direccionResidencia\\\">\\n        Direccion de residencia\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n               id=\\\"direccionResidencia\\\"\\n               formControlName=\\\"direccionResidencia\\\"\\n               required>\\n        <div [hidden]=\\\"form.get('direccionResidencia').valid || form.get('direccionResidencia').pristine\\\">\\n          <div class=\\\"ng-invalid-feedback\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Barrio -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"barrio\\\">\\n        Barrio\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n               id=\\\"barrio\\\"\\n               formControlName=\\\"barrio\\\"\\n               required>\\n        <div [hidden]=\\\"form.get('barrio').valid || form.get('barrio').pristine\\\">\\n          <div class=\\\"ng-invalid-feedback\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Localidad -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"localidad\\\">\\n        Localidad\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n               id=\\\"localidad\\\"\\n               formControlName=\\\"localidad\\\"\\n               required>\\n        <div [hidden]=\\\"form.get('localidad').valid || form.get('localidad').pristine\\\">\\n          <div class=\\\"ng-invalid-feedback\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Ciudad -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"ciudad\\\">\\n        Ciudad\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n               id=\\\"ciudad\\\"\\n               formControlName=\\\"ciudad\\\"\\n               required>\\n        <div [hidden]=\\\"form.get('ciudad').valid || form.get('ciudad').pristine\\\">\\n          <div class=\\\"ng-invalid-feedback\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Telefono -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"telefono\\\">\\n        Telefono\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n\\n        <input type=\\\"number\\\" class=\\\"form-control\\\"\\n               id=\\\"telefono\\\"\\n               formControlName=\\\"telefono\\\"\\n               required>\\n        <div [hidden]=\\\"form.get('telefono').valid || form.get('telefono').pristine\\\">\\n          <div class=\\\"ng-invalid-feedback\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Celular -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"celular\\\">\\n        Celular\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n               id=\\\"celular\\\"\\n               formControlName=\\\"celular\\\"\\n               required>\\n        <div [hidden]=\\\"form.get('celular').valid || form.get('celular').pristine\\\">\\n          <div class=\\\"ng-invalid-feedback\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Estado civil -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"estadoCivil\\\">\\n        Estado civil\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n               id=\\\"estadoCivil\\\"\\n               formControlName=\\\"estadoCivil\\\"\\n               required>\\n        <div [hidden]=\\\"form.get('estadoCivil').valid || form.get('estadoCivil').pristine\\\">\\n          <div class=\\\"ng-invalid-feedback\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Correo electronico -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"correo\\\">\\n        Correo electronico\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n               id=\\\"correo\\\"\\n               formControlName=\\\"correo\\\"\\n               required>\\n        <div [hidden]=\\\"form.get('correo').valid || form.get('correo').pristine\\\">\\n          <div class=\\\"ng-invalid-feedback\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Licencia de conduccion -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"licenciaConduccion\\\">\\n        Licencia de conduccion\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n               id=\\\"licenciaConduccion\\\"\\n               formControlName=\\\"licenciaConduccion\\\"\\n               required>\\n        <div [hidden]=\\\"form.get('licenciaConduccion').valid || form.get('licenciaConduccion').pristine\\\">\\n          <div class=\\\"ng-invalid-feedback\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Categoria o clase -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"categoriaClase\\\">\\n        Categoria o clase\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n               id=\\\"categoriaClase\\\"\\n               formControlName=\\\"categoriaClase\\\"\\n               required>\\n        <div [hidden]=\\\"form.get('categoriaClase').valid || form.get('categoriaClase').pristine\\\">\\n          <div class=\\\"ng-invalid-feedback\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"card-footer bg-white text-right\\\">\\n    <button *ngIf=\\\"dataLoaded\\\" class=\\\"btn btn-warning btn-sm\\\" (click)=\\\"update()\\\">\\n      <i class=\\\"fa fa-edit\\\"></i>\\n      Actualizar\\n    </button>\\n    <button *ngIf=\\\"!dataLoaded\\\" class=\\\"btn btn-success btn-sm\\\" (click)=\\\"save()\\\">\\n      <i class=\\\"fa fa-save\\\"></i>\\n      Guardar\\n    </button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { InfoPersonalService } from '../../../services/datos-personales/info-personal.service';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-info-personal',\n  templateUrl: './info-personal.component.html',\n  styles: []\n})\nexport class InfoPersonalComponent implements OnInit {\n\n  form = this.fb.group({\n    id                  : null,\n    nombre              : ['', Validators.required],\n    documento           : ['', Validators.required],\n    fechaExpedicion     : ['', Validators.required],\n    lugarExpedicion     : ['', Validators.required],\n    libretaMilitar      : ['', Validators.required],\n    lugarNacimiento     : ['', Validators.required],\n    fechaNacimiento     : ['', Validators.required],\n    edad                : ['', Validators.required],\n    direccionResidencia : ['', Validators.required],\n    barrio              : ['', Validators.required],\n    localidad           : ['', Validators.required],\n    ciudad              : ['', Validators.required],\n    telefono            : ['', Validators.required],\n    celular             : ['', Validators.required],\n    estadoCivil         : ['', Validators.required],\n    correo              : ['', Validators.required],\n    licenciaConduccion  : ['', Validators.required],\n    categoriaClase      : ['', Validators.required],\n  });\n\n  dataLoaded = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private infoPersonalService: InfoPersonalService,\n  ) { }\n\n  ngOnInit() {\n    this.get();\n  }\n\n  get() {\n    this.infoPersonalService.get().subscribe(\n      response => {\n        this.form.setValue(response);\n        this.dataLoaded = true;\n      },\n    );\n  }\n\n  save() {\n\n    if (this.form.invalid) {\n      return;\n    }\n\n    const data = this.form.value;\n    this.infoPersonalService.save(data).subscribe(\n      () => alert('Datos guardados con exito'),\n      () => alert('Ocurrio un error. Intente de nuevo')\n    );\n  }\n\n  update() {\n    const data = this.form.value;\n    if (typeof data.id === 'number') {\n      this.infoPersonalService.update(data).subscribe(\n        () => alert('Datos actualizados con exito'),\n        () => alert('Ocurrio un error. Intente de nuevo')\n      );\n    }\n  }\n}\n","module.exports = \"<div class=\\\"card-header\\\">\\n  <h4 class=\\\"text-center\\\">Estudio de seguridad</h4>\\n</div>\\n<div class=\\\"card-body\\\">\\n\\n  <div class=\\\"form-group border-bottom\\\">\\n    <h5 class=\\\"text-center text-uppercase\\\">\\n      Sanchez aguilar jenifer lynay\\n    </h5>\\n    <h6 class=\\\"text-center\\\">\\n      123123\\n    </h6>\\n  </div>\\n\\n  <div *ngIf=\\\"!dataLoaded\\\">\\n  <div class=\\\"form-group row\\\">\\n    <label class=\\\"col-form-label col-md-3\\\" for=\\\"image\\\">Cargar imagen del evaluado</label>\\n    <div class=\\\"col-md-9\\\">\\n      <input id=\\\"image\\\" type=\\\"file\\\" class=\\\"form-control-file\\\" (change)=\\\"setImagenEvaluado($event)\\\">\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group row\\\">\\n    <label class=\\\"col-form-label col-md-3\\\" for=\\\"logoEmpresa\\\">Cargar logo de la empresa</label>\\n    <div class=\\\"col-md-9\\\">\\n      <input id=\\\"logoEmpresa\\\" type=\\\"file\\\" class=\\\"form-control-file\\\" (change)=\\\"setLogoCliente($event)\\\">\\n    </div>\\n  </div>\\n  </div>\\n\\n  <div>\\n    <div class=\\\"form-group\\\">\\n      <label>Foto del evaluado</label><br>\\n      <img class=\\\"img-fluid\\\" [src]=\\\"makeFileUrl(data.fotoEvaluado)\\\" alt=\\\"\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>Logo del cliente</label><br>\\n      <img class=\\\"img-fluid\\\" [src]=\\\"makeFileUrl(data.logoCliente)\\\" alt=\\\"\\\">\\n    </div>\\n  </div>\\n\\n</div>\\n<div class=\\\"card-footer text-right\\\">\\n  <button class=\\\"btn btn-primary\\\" (click)=\\\"saveAll()\\\" *ngIf=\\\"!dataLoaded\\\">Guardar</button>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { File } from '../../../../../@models/file.interface';\nimport { HelperService } from '../../../../../services/helper.service';\nimport { EstudioSeguridadService } from '../../services/informe/estudio-seguridad.service';\n\n@Component({\n  selector: 'app-estudio-seguridad',\n  templateUrl: './estudio-seguridad.component.html',\n  styles: []\n})\nexport class EstudioSeguridadComponent implements OnInit {\n  servicio: any;\n\n  data = {\n    fotoEvaluado: null,\n    logoCliente: null,\n  };\n  dataLoaded = false;\n\n  constructor(\n    private router: Router,\n    private helper: HelperService,\n    private estudioSeguridad: EstudioSeguridadService,\n  ) { }\n\n  ngOnInit() {\n    this.estudioSeguridad.get(1).subscribe((value: any) => {\n      this.data = value.data;\n      this.dataLoaded = true;\n    });\n  }\n\n  onNext() {\n    this.router.navigate(['']);\n  }\n\n  async setLogoCliente(event) {\n    const allowedExtensions = /(\\.png|\\.jpeg|\\.jpg)$/i;\n    const file = event.target.files[0];\n\n    if (!allowedExtensions.test(file.name)) {\n      alert('Archivo no valido');\n      event.target.value = '';\n      return;\n    }\n\n    const base64 = await this.helper.readFile(file);\n\n    this.data.fotoEvaluado = {\n      file_name: file.name,\n      blob: base64\n    };\n  }\n\n  async setImagenEvaluado(event) {\n    const allowedExtensions = /(\\.png|\\.jpeg|\\.jpg)$/i;\n    const file = event.target.files[0];\n\n    if (!allowedExtensions.test(file.name)) {\n      alert('Archivo no valido');\n      event.target.value = '';\n      return;\n    }\n\n    const base64 = await this.helper.readFile(file);\n\n    this.data.logoCliente = {\n      file_name: file.name,\n      blob: base64\n    };\n\n  }\n\n  saveAll() {\n    this.estudioSeguridad.save(this.data, 1).subscribe(\n      response => console.log(response),\n      error => console.log(error)\n    );\n  }\n\n  makeFileUrl(fileName: string) {\n    return this.helper.makeFileUrl(fileName);\n  }\n\n\n}\n","module.exports = \"<div class=\\\"card-header bg-white\\\">\\n  <h4>Verificacion Laboral</h4>\\n</div>\\n<div class=\\\"card-body bg-light\\\">\\n\\n  <!--Historial laboral-->\\n\\n\\n  <!--Nivel academico-->\\n\\n\\n</div>\\n<div class=\\\"card-footer text-right\\\">\\n  <button class=\\\"btn btn-primary\\\" (click)=\\\"saveAll()\\\" *ngIf=\\\"!dataLoaded\\\">Guardar</button>\\n</div>\\n\\n\\n<!--<div class=\\\"col-md-12 m-3 text-right\\\">\\n  <button class=\\\"btn btn-danger mr-2 ml-2\\\"\\n          *ngIf=\\\"permissions.FRCE && ( actividad.estado == 'proceso' || actividad.estado == 'aceptado')\\\"\\n          (click)=\\\"reportarCliente()\\\">\\n    <i class=\\\"fa fa-message\\\"></i>\\n    Alerta\\n  </button>\\n  <button class=\\\"btn btn-success\\\"\\n          *ngIf=\\\"permissions.FRCE && actividad.estado == 'proceso'\\\"\\n          [disabled]=\\\"verificacionLaboral.length === 0\\\"\\n          (click)=\\\"notificarAnalista()\\\">\\n    <i class=\\\"fa fa-message\\\"></i>\\n    Notificar a analista EspInterface\\n  </button>\\n</div>-->\\n<!--historial laboral modal-->\\n\\n\\n\\n<!--nivel academico modal -->\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-historial-laboral-academico',\n  templateUrl: './historial-laboral-academico.component.html',\n  styles: []\n})\nexport class HistorialLaboralAcademicoComponent implements OnInit {\n  verificacionLaboral: any;\n  form: any;\n  historialAcademico: any;\n  isUpdate = false;\n  private modalRef: NgbModalRef;\n  dataLoaded = false;\n\n  constructor(\n    private modalService: NgbModal,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  open(content, data?) {\n    this.modalRef = this.modalService.open(content);\n  }\n\n  addHistorialLaboral() {\n\n  }\n  updateHistorialLaboral() {\n\n  }\n\n  deleteHistorialLaboral(id: any) {\n\n  }\n\n  addNivelAcademico() {\n\n  }\n\n  updateNivelAcademico() {\n\n  }\n\n  deleteNivelAcademico(id: any) {\n\n  }\n\n  saveAll() {}\n}\n","module.exports = \"<div class=\\\"card card-body mb-4\\\">\\n  <b class=\\\"card-title\\\">Historial laboral</b>\\n  <hr>\\n\\n  <!-- table component -->\\n  <div class=\\\"form-group row\\\">\\n    <div class=\\\"col-sm-6\\\">\\n      <div class=\\\"form-group text-right\\\">\\n        <button (click)=\\\"open(mdHistorialLab)\\\" class=\\\"btn btn-primary\\\">\\n          <i class=\\\"fa fa-plus\\\"></i> Agregar\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-12\\\">\\n      <hr>\\n    </div>\\n    <table class=\\\"table table-bordered\\\">\\n      <thead class=\\\"text-capitalize\\\">\\n      <th>empresa</th>\\n      <th>cargo</th>\\n      <th>telefono</th>\\n      <th>periodo</th>\\n      <th>jefeInmediato</th>\\n      <th>cargoJefe</th>\\n      <th>ciudad</th>\\n      <th>motivoRetiro</th>\\n      <th>Confirmacion</th>\\n      <th>observaciones</th>\\n      <th class=\\\"acciones\\\">acciones</th>\\n      </thead>\\n      <tbody>\\n      <tr *ngFor=\\\"let value of verificacionLaboral\\\">\\n        <td> {{ value.empresa }} </td>\\n        <td> {{ value.cargo }} </td>\\n        <td> {{ value.telefono }} </td>\\n        <td> {{ value.periodo }} </td>\\n        <td> {{ value.jefeInmediato }} </td>\\n        <td> {{ value.cargoJefe }} </td>\\n        <td> {{ value.ciudad }} </td>\\n        <td> {{ value.motivoRetiro }} </td>\\n        <td> {{ value.confirmacion === true ? 'Si' : 'No' }} </td>\\n        <td> {{ value.observaciones }} </td>\\n        <td class=\\\"acciones\\\">\\n          <div class=\\\"text-center\\\">\\n            <button class=\\\"btn btn-primary mr-2 ml-2\\\" (click)=\\\"open(mdHistorialLab, value)\\\">\\n              <i class=\\\"fa fa-edit\\\"></i>\\n            </button>\\n\\n            <button class=\\\"btn btn-danger ml-2 mr-2\\\" (click)=\\\"delete(value.id)\\\">\\n              <i class=\\\"fa fa-trash\\\"></i>\\n            </button>\\n          </div>\\n        </td>\\n      </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\\n<ng-template #mdHistorialLab let-modal>\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">Información familiar</h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"modal.close()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <form [formGroup]=\\\"form\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <!-- empresa -->\\n          <div class=\\\"form-group row\\\">\\n            <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"empresa\\\">Empresa</label>\\n            <div class=\\\"col-sm-9\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                     id=\\\"empresa\\\"\\n                     name=\\\"empresa\\\"\\n                     formControlName=\\\"empresa\\\"\\n                     placeholder=\\\"Ingrese un dato valido\\\"\\n                     required>\\n              <div class=\\\"ng-invalid-feedback\\\"\\n                   *ngIf=\\\"(form.get('empresa').invalid &&\\n                     form.get('empresa').dirty)\\\">\\n                El campo es requerido\\n              </div>\\n            </div>\\n          </div>\\n\\n\\n          <!-- cargo -->\\n          <div class=\\\"form-group row\\\">\\n            <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"cargo\\\">Cargo</label>\\n            <div class=\\\"col-sm-9\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                     id=\\\"cargo\\\"\\n                     name=\\\"cargo\\\"\\n                     formControlName=\\\"cargo\\\"\\n                     placeholder=\\\"Ingrese un dato valido\\\"\\n                     required>\\n              <div class=\\\"ng-invalid-feedback\\\"\\n                   *ngIf=\\\"(form.get('cargo').invalid &&\\n                     form.get('cargo').dirty)\\\">\\n                El campo es requerido\\n              </div>\\n            </div>\\n          </div>\\n\\n          <!-- telefono -->\\n          <div class=\\\"form-group row\\\">\\n            <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"telefono\\\">Telefono</label>\\n            <div class=\\\"col-sm-9\\\">\\n              <input type=\\\"number\\\" class=\\\"form-control\\\"\\n                     id=\\\"telefono\\\"\\n                     name=\\\"telefono\\\"\\n                     formControlName=\\\"telefono\\\"\\n                     placeholder=\\\"Ingrese un telefono valido\\\"\\n                     required>\\n              <div class=\\\"ng-invalid-feedback\\\"\\n                   *ngIf=\\\"(form.get('telefono').invalid &&\\n                     form.get('telefono').dirty)\\\">\\n                El campo es requerido\\n              </div>\\n            </div>\\n          </div>\\n\\n\\n          <!-- periodo -->\\n          <div class=\\\"form-group row\\\">\\n            <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"periodo\\\">Periodo</label>\\n            <div class=\\\"col-sm-9\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                     id=\\\"periodo\\\"\\n                     name=\\\"periodo\\\"\\n                     formControlName=\\\"periodo\\\"\\n                     placeholder=\\\"Ingrese un dato valido\\\"\\n                     required>\\n              <div class=\\\"ng-invalid-feedback\\\"\\n                   *ngIf=\\\"(form.get('periodo').invalid &&\\n                     form.get('periodo').dirty)\\\">\\n                El campo es requerido\\n              </div>\\n            </div>\\n          </div>\\n\\n\\n          <!-- jefeInmediato -->\\n          <div class=\\\"form-group row\\\">\\n            <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"jefeInmediato\\\">Jefe Inmediato</label>\\n            <div class=\\\"col-sm-9\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                     id=\\\"jefeInmediato\\\"\\n                     name=\\\"jefeInmediato\\\"\\n                     formControlName=\\\"jefeInmediato\\\"\\n                     placeholder=\\\"Ingrese un dato valido\\\"\\n                     required>\\n              <div class=\\\"ng-invalid-feedback\\\"\\n                   *ngIf=\\\"(form.get('jefeInmediato').invalid &&\\n                     form.get('jefeInmediato').dirty)\\\">\\n                El campo es requerido\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n          <!-- cargoJefe -->\\n          <div class=\\\"form-group row\\\">\\n            <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"cargoJefe\\\">Cargo del Jefe</label>\\n            <div class=\\\"col-sm-9\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                     id=\\\"cargoJefe\\\"\\n                     name=\\\"cargoJefe\\\"\\n                     formControlName=\\\"cargoJefe\\\"\\n                     placeholder=\\\"Ingrese un dato valido\\\"\\n                     required>\\n              <div class=\\\"ng-invalid-feedback\\\"\\n                   *ngIf=\\\"(form.get('cargoJefe').invalid &&\\n                     form.get('cargoJefe').dirty)\\\">\\n                El campo es requerido\\n              </div>\\n            </div>\\n          </div>\\n\\n          <!-- ciudad -->\\n          <div class=\\\"form-group row\\\">\\n            <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"ciudad\\\">Ciudad</label>\\n            <div class=\\\"col-sm-9\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                     id=\\\"ciudad\\\"\\n                     name=\\\"ciudad\\\"\\n                     formControlName=\\\"ciudad\\\"\\n                     placeholder=\\\"Ingrese un dato valido\\\"\\n                     required>\\n              <div class=\\\"ng-invalid-feedback\\\"\\n                   *ngIf=\\\"(form.get('ciudad').invalid &&\\n                     form.get('ciudad').dirty)\\\">\\n                El campo es requerido\\n              </div>\\n            </div>\\n          </div>\\n\\n\\n          <!-- motivoRetiro -->\\n          <div class=\\\"form-group row\\\">\\n            <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"motivoRetiro\\\">Motivo Retiro</label>\\n            <div class=\\\"col-sm-9\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                     id=\\\"motivoRetiro\\\"\\n                     name=\\\"motivoRetiro\\\"\\n                     formControlName=\\\"motivoRetiro\\\"\\n                     placeholder=\\\"Ingrese un dato valido\\\"\\n                     required>\\n              <div class=\\\"ng-invalid-feedback\\\"\\n                   *ngIf=\\\"(form.get('motivoRetiro').invalid &&\\n                     form.get('motivoRetiro').dirty)\\\">\\n                El campo es requerido\\n              </div>\\n            </div>\\n          </div>\\n\\n          <!-- confirmacion -->\\n          <div class=\\\"form-group row\\\">\\n            <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"confirmacion\\\">confirmacion</label>\\n            <div class=\\\"col-sm-9\\\">\\n              <div class=\\\"form-check form-check-inline\\\">\\n                <input class=\\\"form-check-input\\\"\\n                       type=\\\"radio\\\"\\n                       formControlName=\\\"confirmacion\\\"\\n                       id=\\\"confirmacion\\\" [value]=\\\"true\\\">\\n                <label class=\\\"form-check-label\\\" for=\\\"confirmacion\\\">Si</label>\\n              </div>\\n              <div class=\\\"form-check form-check-inline\\\">\\n                <input class=\\\"form-check-input\\\"\\n                       type=\\\"radio\\\"\\n                       formControlName=\\\"confirmacion\\\"\\n                       id=\\\"confirmacion!\\\" [value]=\\\"false\\\">\\n                <label class=\\\"form-check-label\\\" for=\\\"confirmacion!\\\">No</label>\\n              </div>\\n            </div>\\n          </div>\\n\\n\\n          <!-- observacion -->\\n          <div class=\\\"form-group row\\\">\\n            <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"observaciones\\\">Observacion</label>\\n            <div class=\\\"col-sm-9\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                     id=\\\"observaciones\\\"\\n                     name=\\\"observaciones\\\"\\n                     formControlName=\\\"observaciones\\\"\\n                     placeholder=\\\"Ingrese un dato valido\\\"\\n                     required>\\n              <div class=\\\"ng-invalid-feedback\\\"\\n                   *ngIf=\\\"(form.get('observaciones').invalid &&\\n                     form.get('observaciones').dirty)\\\">\\n                El campo es requerido\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn btn-secondary\\\" (click)=\\\"modal.close()\\\">Cerrar</button>\\n    <button class=\\\"btn btn-warning\\\" [disabled]=\\\"form.invalid\\\" (click)=\\\"update()\\\" *ngIf=\\\"isUpdate\\\">Actualizar</button>\\n    <button class=\\\"btn btn-primary\\\" [disabled]=\\\"form.invalid\\\" (click)=\\\"add()\\\" *ngIf=\\\"!isUpdate\\\">Guardar</button>\\n  </div>\\n</ng-template>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-historial-laboral',\n  templateUrl: './historial-laboral.component.html',\n  styles: []\n})\nexport class HistorialLaboralComponent implements OnInit {\n\n  form = this.fb.group({\n    id            : '',\n    empresa       : [ '', Validators.required ],\n    cargo         : [ '', Validators.required ],\n    telefono      : [ '', Validators.required ],\n    periodo       : [ '', Validators.required ],\n    jefeInmediato : [ '', Validators.required ],\n    cargoJefe     : [ '', Validators.required ],\n    ciudad        : [ '', Validators.required ],\n    motivoRetiro  : [ '', Validators.required ],\n    confirmacion  : [ '', Validators.required ],\n    observaciones : [ '', Validators.required ],\n  });\n\n  isUpdate: boolean;\n  modalRef: NgbModalRef;\n  verificacionLaboral = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private modalService: NgbModal,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  open(content, data?) {\n    this.isUpdate = false;\n\n    if (data) {\n      this.form.setValue(data);\n      this.isUpdate = true;\n    }\n\n    this.modalRef = this.modalService.open(content);\n  }\n\n  close() {\n    this.modalRef.close();\n  }\n\n  add() {\n\n    this.close();\n  }\n\n  update() {\n\n    this.close();\n  }\n\n  delete(id: number) {\n\n  }\n\n}\n","module.exports = \"<div class=\\\"card card-body mb-4\\\">\\n  <div class=\\\"form-group row\\\">\\n    <label class=\\\"col-sm-6 col-form-label\\\">\\n      <b class=\\\"card-title\\\">Nivel academico</b>\\n    </label>\\n    <div class=\\\"col-sm-6\\\">\\n      <div class=\\\"form-group text-right\\\">\\n        <button (click)=\\\"open(mdNivelAcademico)\\\" class=\\\"btn btn-primary\\\">\\n          <i class=\\\"fa fa-plus\\\"></i> Agregar\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-12\\\">\\n      <hr>\\n    </div>\\n    <table class=\\\"table table-bordered\\\">\\n      <thead class=\\\"text-capitalize\\\">\\n      <th>nivel</th>\\n      <th>institución</th>\\n      <th>titulo</th>\\n      <th>año</th>\\n      <th>ciudad</th>\\n      <th>confirmación</th>\\n      <th>observaciones</th>\\n      <th class=\\\"acciones\\\">acciones</th>\\n      </thead>\\n      <tbody>\\n      <tr *ngFor=\\\"let value of nivelesAcademicos\\\">\\n        <td>{{ value.nivel }}</td>\\n        <td>{{ value.institucion }}</td>\\n        <td>{{ value.titulo }}</td>\\n        <td>{{ value.anno }}</td>\\n        <td>{{ value.ciudad }}</td>\\n        <td>{{ value.confirmacion === true ? 'Si' : 'No' }}</td>\\n        <td>{{ value.observacion }}</td>\\n        <td class=\\\"acciones\\\">\\n          <div class=\\\"text-center\\\">\\n            <button class=\\\"btn btn-primary mr-2\\\" (click)=\\\"open(mdNivelAcademico, value)\\\">\\n              <i class=\\\"fa fa-edit\\\"></i>\\n            </button>\\n\\n            <button class=\\\"btn btn-danger ml-2\\\" (click)=\\\"delete(value.id)\\\">\\n              <i class=\\\"fa fa-trash\\\"></i>\\n            </button>\\n          </div>\\n        </td>\\n      </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\\n\\n\\n<ng-template #mdNivelAcademico let-modal>\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">Información familiar</h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"modal.close()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <form [formGroup]=\\\"form\\\">\\n\\n      <!-- nivel -->\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"nivel\\\">Nivel</label>\\n        <div class=\\\"col-sm-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                 id=\\\"nivel\\\"\\n                 name=\\\"nivel\\\"\\n                 formControlName=\\\"nivel\\\"\\n                 placeholder=\\\"Ingrese un dato valido\\\"\\n                 required>\\n          <div class=\\\"ng-invalid-feedback\\\"\\n               *ngIf=\\\"(form.get('nivel').invalid &&\\n                     form.get('nivel').dirty)\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n\\n\\n      <!-- institucion -->\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"institucion\\\">Institucion</label>\\n        <div class=\\\"col-sm-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                 id=\\\"institucion\\\"\\n                 name=\\\"institucion\\\"\\n                 formControlName=\\\"institucion\\\"\\n                 placeholder=\\\"Ingrese un dato valido\\\"\\n                 required>\\n          <div class=\\\"ng-invalid-feedback\\\"\\n               *ngIf=\\\"(form.get('institucion').invalid &&\\n                     form.get('institucion').dirty)\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- titulo -->\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"titulo\\\">Titulo</label>\\n        <div class=\\\"col-sm-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                 id=\\\"titulo\\\"\\n                 name=\\\"titulo\\\"\\n                 formControlName=\\\"titulo\\\"\\n                 placeholder=\\\"Ingrese un dato valido\\\"\\n                 required>\\n          <div class=\\\"ng-invalid-feedback\\\"\\n               *ngIf=\\\"(form.get('titulo').invalid &&\\n                     form.get('titulo').dirty)\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n\\n\\n\\n      <!-- anno -->\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"anno\\\">Año</label>\\n        <div class=\\\"col-sm-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                 id=\\\"anno\\\"\\n                 name=\\\"anno\\\"\\n                 formControlName=\\\"anno\\\"\\n                 placeholder=\\\"Ingrese un dato valido\\\"\\n                 required>\\n          <div class=\\\"ng-invalid-feedback\\\"\\n               *ngIf=\\\"(form.get('anno').invalid &&\\n                     form.get('anno').dirty)\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- ciudad -->\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"ciudad2\\\">Ciudad</label>\\n        <div class=\\\"col-sm-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                 id=\\\"ciudad2\\\"\\n                 name=\\\"ciudad\\\"\\n                 formControlName=\\\"ciudad\\\"\\n                 placeholder=\\\"Ingrese un dato valido\\\"\\n                 required>\\n          <div class=\\\"ng-invalid-feedback\\\"\\n               *ngIf=\\\"(form.get('ciudad').invalid &&\\n                     form.get('ciudad').dirty)\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n\\n\\n\\n      <!-- confirmacion -->\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"confirmacionNivelAc\\\">confirmacion</label>\\n        <div class=\\\"col-sm-9\\\">\\n          <div class=\\\"form-check form-check-inline\\\">\\n            <input class=\\\"form-check-input\\\"\\n                   type=\\\"radio\\\"\\n                   formControlName=\\\"confirmacion\\\"\\n                   id=\\\"confirmacionNivelAc\\\" [value]=\\\"true\\\">\\n            <label class=\\\"form-check-label\\\" for=\\\"confirmacionNivelAc\\\">Si</label>\\n          </div>\\n          <div class=\\\"form-check form-check-inline\\\">\\n            <input class=\\\"form-check-input\\\"\\n                   type=\\\"radio\\\"\\n                   formControlName=\\\"confirmacion\\\"\\n                   id=\\\"confirmacionNivelAc!\\\" [value]=\\\"false\\\">\\n            <label class=\\\"form-check-label\\\" for=\\\"confirmacionNivelAc!\\\">No</label>\\n          </div>\\n        </div>\\n      </div>\\n\\n\\n      <!-- observacion -->\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"observacion\\\">Observacion</label>\\n        <div class=\\\"col-sm-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                 id=\\\"observacion\\\"\\n                 name=\\\"observacion\\\"\\n                 formControlName=\\\"observacion\\\"\\n                 placeholder=\\\"Ingrese un dato valido\\\"\\n                 required>\\n          <div class=\\\"ng-invalid-feedback\\\"\\n               *ngIf=\\\"(form.get('observacion').invalid &&\\n                     form.get('observacion').dirty)\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn btn-secondary\\\" (click)=\\\"modal.close()\\\">Cerrar</button>\\n    <button class=\\\"btn btn-warning\\\" [disabled]=\\\"form.invalid\\\" (click)=\\\"update()\\\" *ngIf=\\\"isUpdate\\\">Actualizar</button>\\n    <button class=\\\"btn btn-primary\\\" [disabled]=\\\"form.invalid\\\" (click)=\\\"add()\\\" *ngIf=\\\"!isUpdate\\\">Guardar</button>\\n  </div>\\n</ng-template>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { Hijo } from '../../../interfaces';\n\n@Component({\n  selector: 'app-nivel-academico',\n  templateUrl: './nivel-academico.component.html',\n  styles: []\n})\nexport class NivelAcademicoComponent implements OnInit {\n\n  form = this.fb.group({\n    id            : '',\n    nivel         : [ '', Validators.required ],\n    institucion   : [ '', Validators.required ],\n    titulo        : [ '', Validators.required ],\n    anno          : [ '', Validators.required ],\n    ciudad        : [ '', Validators.required ],\n    confirmacion  : [ true, Validators.required ],\n    observacion   : [ '', Validators.required ],\n  });\n\n  isUpdate: boolean;\n  modalRef: NgbModalRef;\n  nivelesAcademicos = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private modalService: NgbModal,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  open(content, data?: Hijo) {\n    this.isUpdate = false;\n\n    if (data) {\n      this.form.setValue(data);\n      this.isUpdate = true;\n    }\n\n    this.modalRef = this.modalService.open(content);\n  }\n\n  close() {\n    this.modalRef.close();\n  }\n\n  add() {\n\n    this.close();\n  }\n\n  update() {\n\n    this.close();\n  }\n\n  delete(id: number) {\n\n  }\n\n}\n","module.exports = \"<div class=\\\"card-header bg-white\\\">\\n  <h4 class=\\\"text-center\\\">Estudio de seguridad</h4>\\n</div>\\n\\n<div class=\\\"card-body bg-light\\\">\\n\\n  <!-- Informacion familiar card-->\\n  <app-info-personal></app-info-personal>\\n\\n  <!-- Hijos -->\\n  <app-hijos></app-hijos>\\n\\n  <!-- Informacion familiar -->\\n  <app-informacion-familiar></app-informacion-familiar>\\n\\n  <!-- Referencias -->\\n  <app-referencias></app-referencias>\\n\\n</div>\\n\\n<div class=\\\"card-footer bg-white\\\">\\n  <button class=\\\"btn btn-primary\\\" (click)=\\\"saveAll()\\\" *ngIf=\\\"!dataLoaded\\\">Guardar</button>\\n</div>\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-familia',\n  templateUrl: './familia.component.html',\n  styles: []\n})\nexport class FamiliaComponent implements OnInit {\n\n\n  modalRef: NgbModalRef;\n  hijos = [];\n  referencias = [];\n  infoFamiliar = [];\n  isUpdate = false;\n  selectedItem: any;\n  dataLoaded = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private modalService: NgbModal,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  open(content, data?) {\n    this.modalRef = this.modalService.open(content);\n    this.isUpdate = false;\n    if (data) {\n      this.isUpdate = true;\n      this.selectedItem = data;\n    }\n  }\n\n  close() {\n    this.modalRef.close();\n  }\n\n  addHijos() {\n    this.close();\n  }\n\n  updateHijo() {\n    this.close();\n  }\n\n  deleteHijo(id: any) {\n  }\n\n  addInfoFamiliar() {\n    this.close();\n  }\n\n  updateInfoFamiliar() {\n    this.close();\n  }\n\n  deleteInfoFamiliar(id: any) {\n\n  }\n\n  addReferencia() {\n    this.close();\n  }\n\n  updateReferencia() {\n    this.close();\n  }\n\n  deleteReferencia(id: any) {\n\n  }\n\n  saveAll() {\n\n  }\n}\n","module.exports = \"<div class=\\\"mx-auto card\\\">\\r\\n  <div class=\\\"card-body mb-4\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <b class=\\\"card-title\\\">Hijos</b>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4 text-right\\\">\\r\\n        <button (click)=\\\"open(mdHijos)\\\" class=\\\"btn btn-primary\\\">\\r\\n          <i class=\\\"fa fa-plus\\\"></i>\\r\\n          Agregar\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\"><hr></div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <table class=\\\"table table-bordered\\\">\\r\\n          <thead class=\\\"text-capitalize\\\">\\r\\n          <th>edad</th>\\r\\n          <th>nombre</th>\\r\\n          <th>ocupación</th>\\r\\n          <th>ubicación</th>\\r\\n          <th class=\\\"acciones\\\">acciones</th>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n          <tr *ngFor=\\\"let value of hijos\\\">\\r\\n            <td>{{ value.edad }}</td>\\r\\n            <td>{{ value.nombre }}</td>\\r\\n            <td>{{ value.ocupacion }}</td>\\r\\n            <td>{{ value.ubicacion }}</td>\\r\\n            <td class=\\\"acciones\\\">\\r\\n              <div class=\\\"text-center\\\">\\r\\n                <button class=\\\"btn btn-primary mr-2\\\" (click)=\\\"open(mdHijos, value)\\\">\\r\\n                  <i class=\\\"fa fa-edit\\\"></i>\\r\\n                </button>\\r\\n\\r\\n                <button class=\\\"btn btn-danger ml-2\\\" (click)=\\\"delete(value.id)\\\">\\r\\n                  <i class=\\\"fa fa-trash\\\"></i>\\r\\n                </button>\\r\\n              </div>\\r\\n            </td>\\r\\n          </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n      <hr>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Modal add hijos -->\\r\\n<ng-template #mdHijos let-modal>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h5 class=\\\"modal-title\\\" id=\\\"exampleModalVerticalLabel\\\">Hijos</h5>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"modal.close()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <form [formGroup]=\\\"form\\\">\\r\\n\\r\\n      <!-- edad -->\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"hijo-edad\\\">Edad</label>\\r\\n        <div class=\\\"col-sm-9\\\">\\r\\n          <input type=\\\"number\\\" class=\\\"form-control\\\"\\r\\n                 id=\\\"hijo-edad\\\"\\r\\n                 name=\\\"edad\\\"\\r\\n                 formControlName=\\\"edad\\\"\\r\\n                 placeholder=\\\"Ingrese un numero valido\\\"\\r\\n                 required>\\r\\n          <div class=\\\"ng-invalid-feedback\\\"\\r\\n               *ngIf=\\\"(form.get('edad').invalid &&\\r\\n                     form.get('edad').dirty)\\\">\\r\\n            El campo es requerido\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <!-- nombre -->\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"hijo-nombre\\\">Nombre</label>\\r\\n        <div class=\\\"col-sm-9\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                 id=\\\"hijo-nombre\\\"\\r\\n                 name=\\\"nombre\\\"\\r\\n                 formControlName=\\\"nombre\\\"\\r\\n                 placeholder=\\\"Ingrese el nombre valido\\\"\\r\\n                 required>\\r\\n          <div class=\\\"ng-invalid-feedback\\\"\\r\\n               *ngIf=\\\"(form.get('nombre').invalid &&\\r\\n                     form.get('nombre').dirty)\\\">\\r\\n            El campo es requerido\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <!-- ocupacion -->\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"hijo-ocupacion\\\">Ocupación</label>\\r\\n        <div class=\\\"col-sm-9\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                 id=\\\"hijo-ocupacion\\\"\\r\\n                 name=\\\"ocupacion\\\"\\r\\n                 formControlName=\\\"ocupacion\\\"\\r\\n                 placeholder=\\\"Ocupación del hijo\\\"\\r\\n                 required>\\r\\n          <div class=\\\"ng-invalid-feedback\\\"\\r\\n               *ngIf=\\\"(form.get('ocupacion').invalid &&\\r\\n                     form.get('ocupacion').dirty)\\\">\\r\\n            El campo es requerido\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <!-- ubicacion -->\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"hijo-ubicacion\\\">Ubicación</label>\\r\\n        <div class=\\\"col-sm-9\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                 id=\\\"hijo-ubicacion\\\"\\r\\n                 name=\\\"ubicacion\\\"\\r\\n                 formControlName=\\\"ubicacion\\\"\\r\\n                 placeholder=\\\"ingrese una ubicación valida\\\"\\r\\n                 required>\\r\\n          <div class=\\\"ng-invalid-feedback\\\"\\r\\n               *ngIf=\\\"(form.get('ubicacion').invalid &&\\r\\n                     form.get('ubicacion').dirty)\\\">\\r\\n            El campo es requerido\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button class=\\\"btn btn-warning\\\"\\r\\n            *ngIf=\\\"isUpdate\\\"\\r\\n            [disabled]=\\\"form.invalid\\\"\\r\\n            (click)=\\\"update()\\\">\\r\\n      Actualizar\\r\\n    </button>\\r\\n    <button class=\\\"btn btn-primary\\\"\\r\\n            *ngIf=\\\"!isUpdate\\\"\\r\\n            [disabled]=\\\"form.invalid\\\"\\r\\n            (click)=\\\"add()\\\">\\r\\n      Guardar\\r\\n    </button>\\r\\n    <button class=\\\"btn btn-secondary\\\"\\r\\n            (click)=\\\"modal.close()\\\">\\r\\n      Cerrar\\r\\n    </button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { Hijo } from '../../../interfaces';\n\n@Component({\n  selector: 'app-hijos',\n  templateUrl: './hijos.component.html',\n  styles: []\n})\nexport class HijosComponent implements OnInit {\n\n  form = this.fb.group({\n    id          : '',\n    edad        : ['', [Validators.required, Validators.max(120), Validators.min(1)]],\n    nombre      : ['', Validators.required],\n    ocupacion   : ['', Validators.required],\n    ubicacion   : ['', Validators.required],\n  });\n\n  hijos: Hijo[] = [];\n\n  isUpdate = false;\n\n  private modalRef: NgbModalRef;\n\n  constructor(\n    private fb: FormBuilder,\n    private modalService: NgbModal,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  open(content, data?: Hijo) {\n    this.isUpdate = false;\n\n    if (data) {\n      this.form.setValue(data);\n      this.isUpdate = true;\n    }\n\n    this.modalRef = this.modalService.open(content);\n  }\n\n  close() {\n    this.modalRef.close();\n  }\n\n  add() {\n\n    this.close();\n  }\n\n  update() {\n\n    this.close();\n  }\n\n  delete(id: any) {\n\n  }\n}\n","module.exports = \"<div class=\\\"card mt-3\\\">\\n  <div class=\\\"card-body \\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-8\\\">\\n        <b class=\\\"card-title\\\">Informacion familiar</b>\\n      </div>\\n      <div class=\\\"col-md-4 text-right\\\">\\n        <button (click)=\\\"open(mdInfoFamiliar)\\\" class=\\\"btn btn-primary\\\">\\n          <i class=\\\"fa fa-plus\\\"></i>\\n          Agregar\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\"><hr></div>\\n    <div class=\\\"form-group row\\\">\\n      <div class=\\\"col-sm-12\\\">\\n        <table class=\\\"table table-bordered\\\">\\n          <thead class=\\\"text-capitalize\\\">\\n          <th>nombre</th>\\n          <th>parentesco</th>\\n          <th>edad</th>\\n          <th>ocupacion</th>\\n          <th>telefono</th>\\n          <th>ciudad</th>\\n          <th>Vive con ud</th>\\n          <th class=\\\"acciones\\\">acciones</th>\\n          </thead>\\n          <tbody>\\n          <tr *ngFor=\\\"let value of infoFamiliar\\\">\\n            <td>{{ value.nombre }}</td>\\n            <td>{{ value.parentesco }}</td>\\n            <td>{{ value.edad }}</td>\\n            <td>{{ value.ocupacion}}</td>\\n            <td>{{ value.telefono}}</td>\\n            <td>{{ value.ciudad}}</td>\\n            <td>{{ value.viveConUd === true ? 'Si' : 'No' }}</td>\\n            <td class=\\\"acciones\\\">\\n              <div class=\\\"text-center\\\">\\n                <button class=\\\"btn btn-primary mr-2\\\" (click)=\\\"open(mdInfoFamiliar, value)\\\">\\n                  <i class=\\\"fa fa-edit\\\"></i>\\n                </button>\\n\\n                <button class=\\\"btn btn-danger ml-2\\\" (click)=\\\"delete(value.id)\\\">\\n                  <i class=\\\"fa fa-trash\\\"></i>\\n                </button>\\n              </div>\\n            </td>\\n          </tr>\\n          </tbody>\\n        </table>\\n        <hr>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<!-- Modal InformacionFamiliar -->\\n<ng-template #mdInfoFamiliar let-modal>\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">Información familiar</h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"modal.close()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <form [formGroup]=\\\"form\\\">\\n      <!-- nombre -->\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"info-flia-nombre\\\">Nombre</label>\\n        <div class=\\\"col-sm-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                 id=\\\"info-flia-nombre\\\"\\n                 name=\\\"nombre\\\"\\n                 formControlName=\\\"nombre\\\"\\n                 placeholder=\\\"Ingrese un nombre valido\\\"\\n                 required>\\n          <div class=\\\"ng-invalid-feedback\\\"\\n               *ngIf=\\\"(form.get('nombre').invalid &&\\n                     form.get('nombre').dirty)\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- parentesco -->\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"info-flia-parentesco\\\">Parentesco</label>\\n        <div class=\\\"col-sm-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                 id=\\\"info-flia-parentesco\\\"\\n                 name=\\\"parentesco\\\"\\n                 formControlName=\\\"parentesco\\\"\\n                 placeholder=\\\"Ingrese un dato valido\\\"\\n                 required>\\n          <div class=\\\"ng-invalid-feedback\\\"\\n               *ngIf=\\\"(form.get('parentesco').invalid &&\\n                     form.get('parentesco').dirty)\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- edad -->\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"info-flia-edad\\\">Edad</label>\\n        <div class=\\\"col-sm-9\\\">\\n          <input type=\\\"number\\\" class=\\\"form-control\\\"\\n                 id=\\\"info-flia-edad\\\"\\n                 name=\\\"edad\\\"\\n                 formControlName=\\\"edad\\\"\\n                 placeholder=\\\"Ingrese un numero valido\\\"\\n                 required>\\n          <div class=\\\"ng-invalid-feedback\\\"\\n               *ngIf=\\\"(form.get('edad').invalid &&\\n                     form.get('edad').dirty)\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- ocupacion -->\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"info-flia-ocupacion\\\">ocupacion</label>\\n        <div class=\\\"col-sm-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                 id=\\\"info-flia-ocupacion\\\"\\n                 name=\\\"edad\\\"\\n                 formControlName=\\\"ocupacion\\\"\\n                 placeholder=\\\"Ingrese un dato valido\\\"\\n                 required>\\n          <div class=\\\"ng-invalid-feedback\\\"\\n               *ngIf=\\\"(form.get('ocupacion').invalid &&\\n                     form.get('ocupacion').dirty)\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- telefono -->\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"info-flia-telefono\\\">Telefono</label>\\n        <div class=\\\"col-sm-9\\\">\\n          <input type=\\\"number\\\" class=\\\"form-control\\\"\\n                 id=\\\"info-flia-telefono\\\"\\n                 name=\\\"telefono\\\"\\n                 formControlName=\\\"telefono\\\"\\n                 placeholder=\\\"Ingrese un telefono valido\\\"\\n                 required>\\n          <div class=\\\"ng-invalid-feedback\\\"\\n               *ngIf=\\\"(form.get('telefono').invalid &&\\n                     form.get('telefono').dirty)\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- ciudad -->\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"info-flia-ciudad\\\">Ciudad</label>\\n        <div class=\\\"col-sm-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                 id=\\\"info-flia-ciudad\\\"\\n                 name=\\\"edad\\\"\\n                 formControlName=\\\"ciudad\\\"\\n                 placeholder=\\\"Ingrese una ciudad valida\\\"\\n                 required>\\n          <div class=\\\"ng-invalid-feedback\\\"\\n               *ngIf=\\\"(form.get('ciudad').invalid &&\\n                     form.get('ciudad').dirty)\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- Vive con ud -->\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"viveConUd\\\">Vive con ud</label>\\n        <div class=\\\"col-sm-9\\\">\\n          <div class=\\\"form-check form-check-inline\\\">\\n            <input class=\\\"form-check-input\\\"\\n                   type=\\\"radio\\\"\\n                   formControlName=\\\"viveConUd\\\"\\n                   id=\\\"viveConUd\\\" [value]=\\\"true\\\">\\n            <label class=\\\"form-check-label\\\" for=\\\"viveConUd\\\">Si</label>\\n          </div>\\n          <div class=\\\"form-check form-check-inline\\\">\\n            <input class=\\\"form-check-input\\\"\\n                   type=\\\"radio\\\"\\n                   formControlName=\\\"viveConUd\\\"\\n                   id=\\\"viveConUd!\\\" [value]=\\\"false\\\">\\n            <label class=\\\"form-check-label\\\" for=\\\"viveConUd!\\\">No</label>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn btn-warning\\\"\\n            *ngIf=\\\"isUpdate\\\"\\n            [disabled]=\\\"form.invalid\\\"\\n            (click)=\\\"update()\\\">\\n      Actualizar\\n    </button>\\n    <button class=\\\"btn btn-primary\\\"\\n            *ngIf=\\\"!isUpdate\\\"\\n            [disabled]=\\\"form.invalid\\\"\\n            (click)=\\\"add()\\\">\\n      Guardar\\n    </button>\\n    <button class=\\\"btn btn-secondary\\\"\\n            (click)=\\\"modal.close()\\\">\\n      Cerrar\\n    </button>\\n  </div>\\n</ng-template>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { InformacionFamiliar } from '../../../interfaces';\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-informacion-familiar',\n  templateUrl: './informacion-familiar.component.html',\n  styles: []\n})\nexport class InformacionFamiliarComponent implements OnInit {\n\n\n  form = this.fb.group({\n    id          : '',\n    nombre      : ['', Validators.required],\n    parentesco  : ['', Validators.required],\n    edad        : ['', [Validators.required, Validators.max(120), Validators.min(1)]],\n    ocupacion   : ['', Validators.required],\n    telefono    : ['', [Validators.required, Validators.min(0)]],\n    ciudad      : ['', Validators.required],\n    viveConUd   : false,\n  });\n\n  infoFamiliar: InformacionFamiliar[] = [];\n  selectedItem: InformacionFamiliar;\n  isUpdate = false;\n\n  modalRef: NgbModalRef;\n\n  constructor(\n    private fb: FormBuilder,\n    private modalService: NgbModal,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  open(content, data?: InformacionFamiliar) {\n    this.isUpdate = false;\n\n    if (data) {\n      this.form.setValue(data);\n      this.isUpdate = true;\n    }\n\n    this.modalRef = this.modalService.open(content);\n  }\n\n  close() {\n    this.modalRef.close();\n  }\n\n  add() {\n\n    this.close();\n  }\n\n  update() {\n\n    this.close();\n  }\n\n  delete(id: any) {\n\n  }\n}\n","module.exports = \"<div class=\\\"col-md-10 mx-auto card \\\">\\n  <div [formGroup]=\\\"form\\\" class=\\\"card-body mb-4\\\">\\n    <b class=\\\"card-title\\\">Nucleo familiar</b>\\n    <hr>\\n\\n    <!-- Nombre del conyuge -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"nombreConyuge\\\">\\n        Nombre del conyuge\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n               id=\\\"nombreConyuge\\\"\\n               formControlName=\\\"nombreConyuge\\\"\\n               required>\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['nombreConyuge'].invalid &&\\n             form.controls['nombreConyuge'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- edad -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"edadConyuge\\\">Edad</label>\\n      <div class=\\\"col-sm-8\\\">\\n        <input type=\\\"number\\\" class=\\\"form-control\\\"\\n               minlength=\\\"0\\\" maxlength=\\\"130\\\"\\n               id=\\\"edadConyuge\\\"\\n               formControlName=\\\"edadConyuge\\\"\\n               required>\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['edadConyuge'].invalid &&\\n             form.controls['edadConyuge'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Identificación -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"identificacion\\\">Identificación</label>\\n      <div class=\\\"col-sm-8\\\">\\n        <input type=\\\"number\\\" minlength=\\\"0\\\" class=\\\"form-control\\\"\\n               id=\\\"identificacion\\\"\\n               formControlName=\\\"identificacion\\\"\\n               required>\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['identificacion'].invalid &&\\n             form.controls['identificacion'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Lugar de Expedición -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"lugarExpedicion\\\">Lugar de Expedición\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n               id=\\\"lugarExpedicion\\\"\\n               formControlName=\\\"lugarExpedicion\\\"\\n               required>\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['lugarExpedicion'].invalid &&\\n             form.controls['lugarExpedicion'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Lugar de nacimiento -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"lugarNacimiento\\\">Lugar de nacimiento\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n               id=\\\"lugarNacimiento\\\"\\n               formControlName=\\\"lugarNacimiento\\\"\\n               required>\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['lugarNacimiento'].invalid &&\\n             form.controls['lugarNacimiento'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- fecha de nacimiento -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"fechaNacimiento\\\">Fecha de Nacimiento\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n        <input type=\\\"date\\\" class=\\\"form-control\\\"\\n               id=\\\"fechaNacimiento\\\"\\n               formControlName=\\\"fechaNacimiento\\\"\\n               required>\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['fechaNacimiento'].invalid &&\\n             form.controls['fechaNacimiento'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- ocupacion -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"ocupacion\\\">Ocupación\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n               id=\\\"ocupacion\\\"\\n               formControlName=\\\"ocupacion\\\"\\n               required>\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['ocupacion'].invalid &&\\n             form.controls['ocupacion'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- empresa -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"empresa\\\">Empresa\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n               id=\\\"empresa\\\"\\n               formControlName=\\\"empresa\\\"\\n               required>\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['empresa'].invalid &&\\n             form.controls['empresa'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- telefono -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"telefono\\\">Telefono - Celular\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n        <input type=\\\"number\\\" class=\\\"form-control\\\"\\n               id=\\\"telefono\\\"\\n               formControlName=\\\"telefono\\\"\\n               required>\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['telefono'].invalid &&\\n             form.controls['telefono'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- tiempo Laborado -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"tiempoLaborado\\\">Tiempo Laborado\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n               id=\\\"tiempoLaborado\\\"\\n               formControlName=\\\"tiempoLaborado\\\"\\n               required>\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['tiempoLaborado'].invalid &&\\n             form.controls['tiempoLaborado'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-nucleo-familiar',\n  templateUrl: './nucleo-familiar.component.html',\n  styles: []\n})\nexport class NucleoFamiliarComponent implements OnInit {\n\n  form = this.fb.group({\n    id               : '',\n    nombreConyuge    : '',\n    edadConyuge      : ['', [Validators.max(120), Validators.min(1)]],\n    identificacion   : ['', Validators.min(0)],\n    lugarExpedicion  : '',\n    fechaNacimiento  : '',\n    lugarNacimiento  : '',\n    ocupacion        : '',\n    empresa          : '',\n    telefono         : ['', Validators.min(0)],\n    tiempoLaborado   : '',\n  });\n\n  constructor(\n    private fb: FormBuilder,\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"card mt-3\\\">\\n  <div class=\\\"card-body \\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-8\\\">\\n        <b class=\\\"card-title\\\">Referencias</b>\\n      </div>\\n      <div class=\\\"col-md-4 text-right\\\">\\n        <button (click)=\\\"open(mdReferencias)\\\" class=\\\"btn btn-primary\\\">\\n          <i class=\\\"fa fa-plus\\\"></i>\\n          Agregar\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\"><hr></div>\\n    <div class=\\\"form-group row\\\">\\n      <div class=\\\"col-sm-12\\\">\\n        <table class=\\\"table table-bordered\\\">\\n          <thead class=\\\"text-capitalize\\\">\\n          <th>nombre</th>\\n          <th>ocupacion</th>\\n          <th>telefono</th>\\n          <th>ciudad</th>\\n          <th>confirmacion</th>\\n          <th class=\\\"acciones\\\">acciones</th>\\n          </thead>\\n          <tbody>\\n          <tr *ngFor=\\\"let value of referencias\\\">\\n            <td>{{ value.nombre }}</td>\\n            <td>{{ value.ocupacion }}</td>\\n            <td>{{ value.telefono }}</td>\\n            <td>{{ value.ciudad }}</td>\\n            <td>{{ value.confirmacion }}</td>\\n            <td class=\\\"acciones\\\">\\n              <div class=\\\"text-center\\\">\\n                <button class=\\\"btn btn-primary mr-2\\\" (click)=\\\"open(mdReferencias, value)\\\">\\n                  <i class=\\\"fa fa-edit\\\"></i>\\n                </button>\\n\\n                <button class=\\\"btn btn-danger ml-2\\\" (click)=\\\"delete(value.id)\\\">\\n                  <i class=\\\"fa fa-trash\\\"></i>\\n                </button>\\n              </div>\\n            </td>\\n          </tr>\\n          </tbody>\\n        </table>\\n        <hr>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<!-- Modal referencias -->\\n<ng-template #mdReferencias let-modal>\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">Referencias</h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"modal.close()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <form [formGroup]=\\\"form\\\">\\n      <!-- nombre -->\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"ref-nombre\\\">Nombre</label>\\n        <div class=\\\"col-sm-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                 id=\\\"ref-nombre\\\"\\n                 name=\\\"nombre\\\"\\n                 formControlName=\\\"nombre\\\"\\n                 placeholder=\\\"Ingrese un nombre valido\\\"\\n                 required>\\n          <div class=\\\"ng-invalid-feedback\\\"\\n               *ngIf=\\\"(form.get('nombre').invalid &&\\n                     form.get('nombre').dirty)\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- ocupacion -->\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"ref-ocupacion\\\">Ocupación</label>\\n        <div class=\\\"col-sm-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                 id=\\\"ref-ocupacion\\\"\\n                 name=\\\"ocupacion\\\"\\n                 formControlName=\\\"ocupacion\\\"\\n                 placeholder=\\\"Ingrese un dato valido\\\"\\n                 required>\\n          <div class=\\\"ng-invalid-feedback\\\"\\n               *ngIf=\\\"(form.get('ocupacion').invalid &&\\n                     form.get('ocupacion').dirty)\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- telefono -->\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"ref-telefono\\\">Telefono</label>\\n        <div class=\\\"col-sm-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                 id=\\\"ref-telefono\\\"\\n                 name=\\\"telefono\\\"\\n                 formControlName=\\\"telefono\\\"\\n                 placeholder=\\\"Ingrese un telefono valido\\\"\\n                 required>\\n          <div class=\\\"ng-invalid-feedback\\\"\\n               *ngIf=\\\"(form.get('telefono').invalid &&\\n                     form.get('telefono').dirty)\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- ciudad -->\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"ref-ciudad\\\">Ciudad</label>\\n        <div class=\\\"col-sm-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                 id=\\\"ref-ciudad\\\"\\n                 name=\\\"ciudad\\\"\\n                 formControlName=\\\"ciudad\\\"\\n                 placeholder=\\\"Ingrese una ciudad valida\\\"\\n                 required>\\n          <div class=\\\"ng-invalid-feedback\\\"\\n               *ngIf=\\\"(form.get('ciudad').invalid &&\\n                     form.get('ciudad').dirty)\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- confirmacion -->\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"ref-confirmacion\\\">Confirmacion</label>\\n        <div class=\\\"col-sm-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                 id=\\\"ref-confirmacion\\\"\\n                 name=\\\"confirmacion\\\"\\n                 formControlName=\\\"confirmacion\\\"\\n                 placeholder=\\\"Ingrese una dato valido\\\"\\n                 required>\\n          <div class=\\\"ng-invalid-feedback\\\"\\n               *ngIf=\\\"(form.get('confirmacion').invalid &&\\n                     form.get('confirmacion').dirty)\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn btn-warning\\\"\\n            *ngIf=\\\"isUpdate\\\"\\n            [disabled]=\\\"form.invalid\\\"\\n            (click)=\\\"update()\\\">\\n      Actualizar\\n    </button>\\n    <button class=\\\"btn btn-primary\\\"\\n            *ngIf=\\\"!isUpdate\\\"\\n            [disabled]=\\\"form.invalid\\\"\\n            (click)=\\\"add()\\\">\\n      Guardar\\n    </button>\\n    <button class=\\\"btn btn-secondary\\\"\\n            (click)=\\\"modal.close()\\\">\\n      Cerrar\\n    </button>\\n  </div>\\n</ng-template>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Referencia } from '../../../interfaces';\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-referencias',\n  templateUrl: './referencias.component.html',\n  styles: []\n})\nexport class ReferenciasComponent implements OnInit {\n\n  form = this.fb.group({\n    id            : '',\n    nombre        : ['', Validators.required],\n    ocupacion     : ['', Validators.required],\n    telefono      : ['', [Validators.required, Validators.min(0)]],\n    ciudad        : ['', Validators.required],\n    confirmacion  : ['', Validators.required],\n  });\n\n  referencias: Referencia[];\n\n  isUpdate = false;\n  modalRef: NgbModalRef;\n\n  constructor(\n    private fb: FormBuilder,\n    private modalService: NgbModal,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  open(content, data?: Referencia) {\n    this.isUpdate = false;\n\n    if (data) {\n      this.form.setValue(data);\n      this.isUpdate = true;\n    }\n\n    this.modalRef = this.modalService.open(content);\n  }\n\n  close() {\n    this.modalRef.close();\n  }\n\n  add() {\n\n    this.close();\n  }\n\n  update() {\n\n    this.close();\n  }\n\n  delete(id: any) {\n\n  }\n}\n","module.exports = \"<div class=\\\"col-md-10 mx-auto card mb-4\\\">\\n  <div class=\\\"card-body\\\">\\n    <b class=\\\"card-title\\\">Condiciones  fisicas del inmueble</b>\\n    <hr>\\n\\n    <!-- Estado general -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"estadoGeneral\\\">Estado general</label>\\n      <div class=\\\"col-sm-8\\\">\\n        <select class=\\\"form-control\\\" name=\\\"estadoGeneral\\\" id=\\\"estadoGeneral\\\" formControlName=\\\"estadoGeneral\\\">\\n          <option value=\\\"\\\">Seleccione</option>\\n          <option value=\\\"Bueno\\\">Bueno</option>\\n          <option value=\\\"Regular\\\">Regular</option>\\n          <option value=\\\"Malo\\\">Malo</option>\\n        </select>\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['estadoGeneral'].invalid &&\\n           form.controls['estadoGeneral'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Acabados -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"acabados\\\">Acabados</label>\\n      <div class=\\\"col-sm-8\\\">\\n        <select class=\\\"form-control\\\" name=\\\"acabados\\\" id=\\\"acabados\\\" formControlName=\\\"acabados\\\">\\n          <option value=\\\"\\\">Seleccione</option>\\n          <option value=\\\"Completos\\\">Completos</option>\\n          <option value=\\\"Incompletos\\\">Incompletos</option>\\n        </select>\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['acabados'].invalid &&\\n           form.controls['acabados'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Dotacion -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"dotacion\\\">\\n        Dotación\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               name=\\\"dotacion\\\"\\n               id=\\\"dotacion\\\"\\n               placeholder=\\\"Ingrese la dotación\\\"\\n               formControlName=\\\"dotacion\\\">\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['dotacion'].invalid &&\\n           form.controls['dotacion'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Salubridad -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"salubridad\\\">\\n        Salubridad\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               name=\\\"salubridad\\\"\\n               id=\\\"salubridad\\\"\\n               placeholder=\\\"Ingrese el estado de salubridad\\\"\\n               formControlName=\\\"salubridad\\\">\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['salubridad'].invalid &&\\n           form.controls['salubridad'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Estrato -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"estrato\\\">Estrato</label>\\n      <div class=\\\"col-sm-8\\\">\\n        <select class=\\\"form-control\\\" name=\\\"estrato\\\" id=\\\"estrato\\\" formControlName=\\\"estrato\\\">\\n          <option value=\\\"\\\">Seleccione</option>\\n          <option value=\\\"1\\\">1</option>\\n          <option value=\\\"2\\\">2</option>\\n          <option value=\\\"3\\\">3</option>\\n          <option value=\\\"4\\\">4</option>\\n          <option value=\\\"5\\\">5</option>\\n          <option value=\\\"6\\\">6</option>\\n        </select>\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['estrato'].invalid &&\\n           form.controls['estrato'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Servicio públicos\\t -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"serviciosPublicos\\\">\\n        Servicios públicos\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n        <textarea name=\\\"serviciosPublicos\\\" id=\\\"serviciosPublicos\\\"\\n                  cols=\\\"30\\\" rows=\\\"3\\\"\\n                  class=\\\"form-control\\\"\\n                  formControlName=\\\"serviciosPublicos\\\"\\n                  placeholder=\\\"Ingrese los servicios publicos\\\">\\n        </textarea>\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['serviciosPublicos'].invalid &&\\n           form.controls['serviciosPublicos'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Distribución de la vivienda\\t -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"distribucion\\\">\\n        Distribución de la vivienda\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n        <textarea name=\\\"serviciosPublicos\\\" id=\\\"distribucion\\\"\\n                  cols=\\\"30\\\" rows=\\\"3\\\"\\n                  class=\\\"form-control\\\"\\n                  formControlName=\\\"distribucion\\\"\\n                  placeholder=\\\"Ingrese la distribución de la vivienda\\t\\\">\\n        </textarea>\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['distribucion'].invalid &&\\n           form.controls['distribucion'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-condiciones-inmueble',\n  templateUrl: './condiciones-inmueble.component.html',\n  styles: []\n})\nexport class CondicionesInmuebleComponent implements OnInit {\n\n  form = this.fb.group({\n    id                    : new FormControl(),\n    estadoGeneral         : new FormControl('', Validators.required),\n    acabados              : new FormControl('', Validators.required),\n    dotacion              : new FormControl('', Validators.required),\n    salubridad            : new FormControl('', Validators.required),\n    estrato               : new FormControl('', Validators.required),\n    serviciosPublicos     : new FormControl('', Validators.required),\n    distribucion          : new FormControl('', Validators.required),\n  });\n\n  constructor(\n    private fb: FormBuilder,\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"col-md-10 mx-auto card mb-4\\\">\\n  <div class=\\\"card-body\\\">\\n    <b class=\\\"card-title\\\">Condiciones generales del sector</b>\\n    <hr>\\n\\n    <!-- Ciudad -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"ciudad\\\">\\n        Ciudad\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               name=\\\"ciudad\\\"\\n               id=\\\"ciudad\\\"\\n               placeholder=\\\"Ingrese la ciudad\\\"\\n               formControlName=\\\"ciudad\\\">\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['ciudad'].invalid &&\\n           form.controls['ciudad'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Barrio -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"barrio\\\">\\n        Barrio\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               name=\\\"barrio\\\"\\n               id=\\\"barrio\\\"\\n               placeholder=\\\"Ingrese el barrio\\\"\\n               formControlName=\\\"barrio\\\">\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['barrio'].invalid &&\\n           form.controls['barrio'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Localidad -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"localidad\\\">\\n        Localidad\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               name=\\\"localidad\\\"\\n               id=\\\"localidad\\\"\\n               placeholder=\\\"Ingrese la localidad\\\"\\n               formControlName=\\\"localidad\\\">\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['localidad'].invalid &&\\n           form.controls['localidad'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Vías de acceso\\t -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"viasAcceso\\\">\\n        Vías de acceso\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n        <textarea name=\\\"viasAcceso\\\" id=\\\"viasAcceso\\\"\\n                  cols=\\\"30\\\" rows=\\\"3\\\"\\n                  class=\\\"form-control\\\"\\n                  formControlName=\\\"viasAcceso\\\"\\n                  placeholder=\\\"Ingrese las vias de acceso\\\">\\n        </textarea>\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['viasAcceso'].invalid &&\\n           form.controls['viasAcceso'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Transporte público\\t -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"transportePublico\\\">\\n        Transporte público\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n        <textarea name=\\\"transportePublico\\\" id=\\\"transportePublico\\\"\\n                  cols=\\\"30\\\" rows=\\\"3\\\"\\n                  class=\\\"form-control\\\"\\n                  formControlName=\\\"transportePublico\\\"\\n                  placeholder=\\\"Transporte público\\\">\\n        </textarea>\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['transportePublico'].invalid &&\\n           form.controls['transportePublico'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Centros asistenciales\\t\\t -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"centrosAsistenciales\\\">\\n        Centros asistenciales\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n        <textarea name=\\\"centrosAsistenciales\\\" id=\\\"centrosAsistenciales\\\"\\n                  cols=\\\"30\\\" rows=\\\"3\\\"\\n                  class=\\\"form-control\\\"\\n                  formControlName=\\\"centrosAsistenciales\\\"\\n                  placeholder=\\\"Centros asistenciales\\\">\\n        </textarea>\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['centrosAsistenciales'].invalid &&\\n           form.controls['centrosAsistenciales'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Flujo vehicular -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"flujoVehicular\\\">\\n        Flujo vehícular\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               name=\\\"flujoVehicular\\\"\\n               id=\\\"flujoVehicular\\\"\\n               placeholder=\\\"Ingrese el flujo vehícular\\t\\\"\\n               formControlName=\\\"flujoVehicular\\\">\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['flujoVehicular'].invalid &&\\n           form.controls['flujoVehicular'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Nivel de seguridad -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"nivelSeguridad\\\">\\n        Nivel de seguridad\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n        <select class=\\\"form-control\\\" name=\\\"nivelSeguridad\\\" id=\\\"nivelSeguridad\\\" formControlName=\\\"nivelSeguridad\\\">\\n          <option value=\\\"\\\">Seleccione</option>\\n          <option value=\\\"Alto\\\">Alto</option>\\n          <option value=\\\"Medio\\\">Medio</option>\\n          <option value=\\\"Bajo\\\">Bajo</option>\\n        </select>\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['nivelSeguridad'].invalid &&\\n           form.controls['nivelSeguridad'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-condiciones-sector',\n  templateUrl: './condiciones-sector.component.html',\n  styles: []\n})\nexport class CondicionesSectorComponent implements OnInit {\n\n  form = this.fb.group({\n    id                    : '',\n    ciudad                : ['', Validators.required],\n    barrio                : ['', Validators.required],\n    localidad             : ['', Validators.required],\n    viasAcceso            : ['', Validators.required],\n    transportePublico     : ['', Validators.required],\n    centrosAsistenciales  : ['', Validators.required],\n    flujoVehicular        : ['', Validators.required],\n    nivelSeguridad        : ['', Validators.required],\n  });\n\n  constructor(\n    private fb: FormBuilder,\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"col-md-10 mx-auto card mb-4\\\">\\n  <div class=\\\"card-body\\\">\\n    <b class=\\\"card-title\\\">Entorno habitacional</b>\\n    <hr>\\n\\n    <!-- tipo de vivienda -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"tipoVivienda\\\">Tipo de vivienda</label>\\n      <div class=\\\"col-sm-8\\\">\\n        <select class=\\\"form-control\\\" name=\\\"tipoVivienda\\\" id=\\\"tipoVivienda\\\" formControlName=\\\"tipoVivienda\\\">\\n          <option value=\\\"\\\">Seleccione</option>\\n          <option value=\\\"Casa\\\">Casa</option>\\n          <option value=\\\"Casa lote\\\">Casa lote</option>\\n          <option value=\\\"Apartamento\\\">Apartamento</option>\\n          <option value=\\\"Apartamento\\\">Apartamento</option>\\n          <option value=\\\"Aparta-estudio\\\">Aparta-estudio</option>\\n        </select>\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['tipoVivienda'].invalid &&\\n           form.controls['tipoVivienda'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Tenencia -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"tenencia\\\">Tenencia</label>\\n      <div class=\\\"col-sm-8\\\">\\n        <select class=\\\"form-control\\\" name=\\\"tenencia\\\" id=\\\"tenencia\\\" formControlName=\\\"tenencia\\\">\\n          <option value=\\\"\\\">Seleccione</option>\\n          <option value=\\\"Arriendo\\\">Arriendo</option>\\n          <option value=\\\"Familiar\\\">Familiar</option>\\n          <option value=\\\"Propia\\\">Propia</option>\\n        </select>\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['tenencia'].invalid &&\\n           form.controls['tenencia'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Tiempo de permanencia -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"tiempoPermanencia\\\">Tiempo de permanencia</label>\\n      <div class=\\\"col-sm-8\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               name=\\\"tiempoPermanencia\\\"\\n               id=\\\"tiempoPermanencia\\\"\\n               placeholder=\\\"Ingrese el tiempo de permanencia\\\"\\n               formControlName=\\\"tiempoPermanencia\\\">\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['tiempoPermanencia'].invalid &&\\n           form.controls['tiempoPermanencia'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Información del propietario -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"infoPropietario\\\">\\n        Información del propietario\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n        <input type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               name=\\\"infoPropietario\\\"\\n               id=\\\"infoPropietario\\\"\\n               placeholder=\\\"Ingrese el tiempo de permanencia\\\"\\n               formControlName=\\\"infoPropietario\\\">\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['infoPropietario'].invalid &&\\n           form.controls['infoPropietario'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Fotografia -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"fotografia\\\">\\n        Fotografías\\n      </label>\\n      <div class=\\\"col-sm-8\\\">\\n        <div class=\\\"custom-file\\\">\\n          <input type=\\\"text\\\"\\n                 class=\\\"custom-file-input\\\"\\n                 name=\\\"fotografia\\\"\\n                 id=\\\"fotografia\\\"\\n                 placeholder=\\\"Ingrese el tiempo de permanencia\\\"\\n                 formControlName=\\\"fotografia\\\">\\n          <label class=\\\"custom-file-label\\\" for=\\\"fotografia\\\">seleccione un archivo</label>\\n        </div>\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['fotografia'].invalid &&\\n           form.controls['fotografia'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-entorno-habitacional',\n  templateUrl: './entorno-habitacional.component.html',\n  styles: []\n})\nexport class EntornoHabitacionalComponent implements OnInit {\n\n  form = this.fb.group({\n    id                    : '',\n    tipoVivienda          : ['', Validators.required],\n    tenencia              : ['', Validators.required],\n    tiempoPermanencia     : ['', Validators.required],\n    infoPropietario       : ['', Validators.required],\n    fotografia            : ['', Validators.required],\n  });\n\n  constructor(\n    private fb: FormBuilder,\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"card-header bg-white\\\">\\n  <h4 class=\\\"text-center\\\">Estudio de seguridad</h4>\\n</div>\\n<div class=\\\"card-body bg-light\\\" [formGroup]=\\\"form\\\">\\n\\n  <!-- Entorno habitacional -->\\n  <app-entorno-habitacional></app-entorno-habitacional>\\n\\n  <!--Condiciones  fisicas del inmueble-->\\n  <app-condiciones-inmueble></app-condiciones-inmueble>\\n\\n\\n  <!--Condiciones generales del sector-->\\n  <app-condiciones-sector></app-condiciones-sector>\\n\\n</div>\\n<div class=\\\"card-footer text-right\\\">\\n  <button class=\\\"btn btn-primary\\\" (click)=\\\"saveAll()\\\" *ngIf=\\\"!dataLoaded\\\">Guardar</button>\\n</div>\\n<!--<pre>{{ form.getRawValue() | json }}</pre>-->\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-informe2',\n  templateUrl: './informe2.component.html',\n  styles: []\n})\nexport class Informe2Component implements OnInit {\n\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  saveAll() {}\n\n}\n","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 text-center mt-3\\\">\\n\\n      <div class=\\\"btn-group\\\">\\n\\n        <button *ngFor=\\\"let item of informe\\\"\\n                type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                routerLinkActive=\\\"active\\\"\\n                [routerLink]=\\\"item.path\\\">\\n          {{ item.name }}\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"col-md-10 mx-auto mt-4\\\">\\n  <div class=\\\"card\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { EstudioSeguridadComponent } from '../estudio-seguridad/estudio-seguridad.component';\nimport { DatosPersonalesComponent } from '../datos-personales/datos-personales.component';\nimport { FamiliaComponent } from '../informacion-familiar/familia.component';\nimport { Informe2Component } from '../informe2/informe2.component';\nimport { ModusVivendiComponent } from '../modus-vivendi/modus-vivendi.component';\nimport { HistorialLaboralAcademicoComponent } from '../historial-laboral-academico/historial-laboral-academico.component';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styles: []\n})\nexport class MainComponent implements OnInit {\n\n  informe = [\n    {\n      path : './estudio-seguridad',\n      name : 'Estudio de seguridad',\n    },\n    { path: './datos-personales',\n      name: 'Datos personales',\n    },\n    { path: './informacion-familiar',\n      name: 'Informacion Familiar',\n    },\n    { path: './informe2',\n      name: 'Entorno habitacional',\n    },\n    { path: './modus-vivendi',\n      name: 'Modus vivendi',\n    },\n    { path: './historial-laboral-academico',\n      name: 'Historial laboral',\n    },\n  ];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"card mt-3\\\">\\n  <div class=\\\"card-body \\\">\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-6 col-form-label\\\">\\n        <b>Capacidad de endeudamiento</b>\\n      </label>\\n      <div class=\\\"col-sm-6\\\">\\n        <div class=\\\"form-group text-right\\\">\\n          <button (click)=\\\"open(mdCapEndeudamiento)\\\" class=\\\"btn btn-primary\\\">\\n            <i class=\\\"fa fa-plus\\\"></i>\\n            Agregar\\n          </button>\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-12\\\">\\n        <hr>\\n      </div>\\n      <div class=\\\"col-sm-12 mt-2\\\">\\n        <table class=\\\"table table-bordered\\\">\\n          <thead class=\\\"text-capitalize\\\">\\n          <th>descripción</th>\\n          <th>entidad</th>\\n          <th>monto</th>\\n          <th>estado deuda</th>\\n          <th>valor mensual</th>\\n          <th class=\\\"acciones\\\">acciones</th>\\n          </thead>\\n          <tbody>\\n          <tr *ngFor=\\\"let value of capEndeudamiento\\\">\\n            <td> {{ value.descripcion }}</td>\\n            <td> {{ value.entidad }}</td>\\n            <td> {{ value.monto }}</td>\\n            <td> {{ value.estadoDeuda }}</td>\\n            <td> {{ value.valorMensual }}</td>\\n            <td class=\\\"acciones\\\">\\n              <div class=\\\"text-center\\\">\\n                <button class=\\\"btn btn-primary mr-2\\\" (click)=\\\"open(mdCapEndeudamiento, value)\\\">\\n                  <i class=\\\"fa fa-edit\\\"></i>\\n                </button>\\n\\n                <button class=\\\"btn btn-danger ml-2\\\" (click)=\\\"delete(value.id)\\\">\\n                  <i class=\\\"fa fa-trash\\\"></i>\\n                </button>\\n              </div>\\n            </td>\\n          </tr>\\n          </tbody>\\n        </table>\\n        <hr>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n\\n<ng-template #mdCapEndeudamiento let-modal>\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">Capacidad de endeudamiento</h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"modal.close()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <form [formGroup]=\\\"form\\\">\\n\\n      <!-- Descripcion -->\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"cap-descripcion\\\">Descripcion</label>\\n        <div class=\\\"col-sm-9\\\">\\n          <select name=\\\"descripcion\\\" id=\\\"cap-descripcion\\\"\\n                  class=\\\"form-control text-capitalize\\\"\\n                  formControlName=\\\"descripcion\\\">\\n            <option value=\\\"\\\">Seleccione</option>\\n            <option>tarjeta de credito</option>\\n            <option>credito hipotecario</option>\\n            <option>credito libre inversión</option>\\n          </select>\\n          <div class=\\\"ng-invalid-feedback\\\"\\n               *ngIf=\\\"(form.get('descripcion').invalid &&\\n                     form.get('descripcion').dirty)\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n\\n\\n      <!-- entidad -->\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"cap-entidad\\\">Entidad</label>\\n        <div class=\\\"col-sm-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                 id=\\\"cap-entidad\\\"\\n                 name=\\\"entidad\\\" formControlName=\\\"entidad\\\"\\n                 placeholder=\\\"Ingrese un dato valido\\\" required>\\n          <div class=\\\"ng-invalid-feedback\\\"\\n               *ngIf=\\\"(form.get('entidad').invalid &&\\n                     form.get('entidad').dirty)\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- monto -->\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"cap-monto\\\">Monto</label>\\n        <div class=\\\"col-sm-9\\\">\\n          <input type=\\\"number\\\" class=\\\"form-control\\\"\\n                 id=\\\"cap-monto\\\"\\n                 name=\\\"monto\\\" formControlName=\\\"monto\\\"\\n                 placeholder=\\\"Ingrese un dato valido\\\" required>\\n          <div class=\\\"ng-invalid-feedback\\\"\\n               *ngIf=\\\"(form.get('monto').invalid &&\\n                     form.get('monto').dirty)\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- estadoDeuda -->\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"cap-estadoDeuda\\\">Estado de Deuda</label>\\n        <div class=\\\"col-sm-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                 id=\\\"cap-estadoDeuda\\\"\\n                 name=\\\"estadoDeuda\\\" formControlName=\\\"estadoDeuda\\\"\\n                 placeholder=\\\"Ingrese un dato valido\\\" required>\\n          <div class=\\\"ng-invalid-feedback\\\"\\n               *ngIf=\\\"(form.get('estadoDeuda').invalid &&\\n                     form.get('estadoDeuda').dirty)\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- valorMensual -->\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"cap-valorMensual\\\">Valor Mensual</label>\\n        <div class=\\\"col-sm-9\\\">\\n          <input type=\\\"number\\\" class=\\\"form-control\\\"\\n                 id=\\\"cap-valorMensual\\\"\\n                 name=\\\"valorMensual\\\" formControlName=\\\"valorMensual\\\"\\n                 placeholder=\\\"Ingrese un numero valido\\\" required>\\n          <div class=\\\"ng-invalid-feedback\\\"\\n               *ngIf=\\\"(form.get('valorMensual').invalid &&\\n                     form.get('valorMensual').dirty)\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"modal.close()\\\">Cerrar</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" [disabled]=\\\"form.invalid\\\" (click)=\\\"update()\\\" *ngIf=\\\"isUpdate\\\">Actualizar</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"form.invalid\\\" (click)=\\\"add()\\\" *ngIf=\\\"!isUpdate\\\">Guardar</button>\\n  </div>\\n</ng-template>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { Hijo } from '../../../interfaces';\n\n@Component({\n  selector: 'app-capacidad-endeudamiento',\n  templateUrl: './capacidad-endeudamiento.component.html',\n  styles: []\n})\nexport class CapacidadEndeudamientoComponent implements OnInit {\n\n  form = this.fb.group({\n    id           : '',\n    descripcion  : ['', Validators.required],\n    entidad      : ['', Validators.required],\n    monto        : ['', Validators.required],\n    estadoDeuda  : ['', Validators.required],\n    valorMensual : ['', Validators.required],\n  });\n\n  isUpdate: boolean;\n  modalRef: NgbModalRef;\n  capEndeudamiento = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private modalService: NgbModal,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  open(content, data?: Hijo) {\n    this.isUpdate = false;\n\n    if (data) {\n      this.form.setValue(data);\n      this.isUpdate = true;\n    }\n\n    this.modalRef = this.modalService.open(content);\n  }\n\n  close() {\n    this.modalRef.close();\n  }\n\n  add() {\n\n    this.close();\n  }\n\n  update() {\n\n    this.close();\n  }\n\n  delete(id: number) {\n\n  }\n\n}\n","module.exports = \"<div class=\\\"col-md-10 mx-auto card mb-4\\\">\\n  <div [formGroup]=\\\"form\\\" class=\\\" card-body\\\">\\n    <b class=\\\"card-title\\\">Ingresos mensuales</b>\\n    <hr>\\n\\n    <!-- total egresos -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"engresosMensuales\\\">Total egresos</label>\\n      <div class=\\\"col-sm-8\\\">\\n        <input type=\\\"number\\\" class=\\\"form-control\\\"\\n               id=\\\"engresosMensuales\\\"\\n               formControlName=\\\"engresosMensuales\\\"\\n               required>\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['engresosMensuales'].invalid &&\\n                     form.controls['engresosMensuales'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Descripción de gastos\\t-->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"descripcionGastos\\\">Descripcion de egresos</label>\\n      <div class=\\\"col-sm-8\\\">\\n        <textarea name=\\\"descripcionGastos\\\"\\n                  id=\\\"descripcionGastos\\\"\\n                  rows=\\\"3\\\" class=\\\"form-control\\\"\\n                  formControlName=\\\"descripcionGastos\\\"></textarea>\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['descripcionGastos'].invalid &&\\n                     form.controls['descripcionGastos'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- personas dependientes -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"personasDependientes\\\">Personas que dependen del evaluado.</label>\\n      <div class=\\\"col-sm-8\\\">\\n        <input type=\\\"number\\\" class=\\\"form-control\\\"\\n               id=\\\"personasDependientes\\\"\\n               formControlName=\\\"personasDependientes\\\"\\n               required>\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['personasDependientes'].invalid &&\\n                     form.controls['personasDependientes'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-egresos',\n  templateUrl: './egresos.component.html',\n  styles: []\n})\nexport class EgresosComponent implements OnInit {\n\n  form = this.fb.group({\n    id                   : '',\n    engresosMensuales    : ['', [Validators.required, Validators.min(1)]],\n    descripcionGastos    : ['', Validators.required],\n    personasDependientes : ['', Validators.required],\n  });\n\n  constructor(\n    private fb: FormBuilder,\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<!-- Ingresos-->\\n<div class=\\\"col-md-10 mx-auto card mb-4\\\">\\n  <div [formGroup]=\\\"form\\\" class=\\\"card-body \\\">\\n    <b class=\\\"card-title\\\">Ingresos mensuales</b>\\n    <hr>\\n\\n    <!-- Salario -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"salario\\\">Salario</label>\\n      <div class=\\\"col-sm-8\\\">\\n        <input type=\\\"number\\\" class=\\\"form-control\\\"\\n               id=\\\"salario\\\"\\n               formControlName=\\\"salario\\\"\\n               required>\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['salario'].invalid &&\\n                     form.controls['salario'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- otrosIngresos -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"otrosIngresos\\\">Otros ingresos</label>\\n      <div class=\\\"col-sm-8\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n               id=\\\"otrosIngresos\\\"\\n               formControlName=\\\"otrosIngresos\\\"\\n               required>\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['otrosIngresos'].invalid &&\\n                     form.controls['otrosIngresos'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Salario Conyugue -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"salarioConyugue\\\">Salario Conyugue</label>\\n      <div class=\\\"col-sm-8\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n               id=\\\"salarioConyugue\\\"\\n               formControlName=\\\"salarioConyugue\\\"\\n               required>\\n        <div class=\\\"ng-invalid-feedback\\\"\\n             *ngIf=\\\"(form.controls['salarioConyugue'].invalid &&\\n                     form.controls['salarioConyugue'].dirty)\\\">\\n          El campo es requerido\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-ingresos',\n  templateUrl: './ingresos.component.html',\n  styles: []\n})\nexport class IngresosComponent implements OnInit {\n\n  form = this.fb.group({\n    id              : '',\n    salario         : ['', [Validators.required, Validators.min(1)]],\n    otrosIngresos   : ['', [Validators.required, Validators.min(1)]],\n    salarioConyugue : ['', [Validators.required, Validators.min(1)]],\n  });\n\n  constructor(\n    private fb: FormBuilder,\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"card mt-4\\\">\\n  <div class=\\\"card-body \\\">\\n    <!-- bienes Inmuebles -->\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-6 col-form-label\\\">\\n        <b>Patrimonio - Bienes Inmuebles</b>\\n      </label>\\n      <div class=\\\"col-sm-6\\\">\\n        <div class=\\\"form-group text-right\\\">\\n          <button (click)=\\\"open(mdBienInmueble)\\\" class=\\\"btn btn-primary\\\">\\n            <i class=\\\"fa fa-plus\\\"></i> Agregar\\n          </button>\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-12\\\">\\n        <hr>\\n      </div>\\n      <div class=\\\"col-sm-12 mt-2\\\">\\n        <table class=\\\"table table-bordered\\\">\\n          <thead class=\\\"text-capitalize\\\">\\n          <th>tipo</th>\\n          <th>dirección</th>\\n          <th>telefono</th>\\n          <th>ciudad</th>\\n          <th>avalúo</th>\\n          <th>hipoteca</th>\\n          <th class=\\\"acciones\\\">acciones</th>\\n          </thead>\\n          <tbody>\\n          <tr *ngFor=\\\"let value of bienesInmuebles\\\">\\n            <td>{{ value.tipo }}</td>\\n            <td>{{ value.direccion }}</td>\\n            <td>{{ value.telefono }}</td>\\n            <td>{{ value.ciudad }}</td>\\n            <td>{{ value.avaluo }}</td>\\n            <td>{{ value.hipoteca === true ? 'Si' : 'No' }}</td>\\n            <td class=\\\"acciones\\\">\\n              <div class=\\\"text-center\\\">\\n                <button class=\\\"btn btn-primary mr-2\\\" (click)=\\\"open(mdBienInmueble, value)\\\">\\n                  <i class=\\\"fa fa-edit\\\"></i>\\n                </button>\\n\\n                <button class=\\\"btn btn-danger ml-2\\\" (click)=\\\"delete(value.id)\\\">\\n                  <i class=\\\"fa fa-trash\\\"></i>\\n                </button>\\n              </div>\\n            </td>\\n          </tr>\\n          </tbody>\\n        </table>\\n        <hr>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n\\n\\n<!-- Modal -->\\n<ng-template #mdBienInmueble let-modal>\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">Bienes inmuebles</h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"modal.close()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <form [formGroup]=\\\"form\\\">\\n\\n      <!-- tipo -->\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"bi-tipo\\\">Tipo</label>\\n        <div class=\\\"col-sm-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                 id=\\\"bi-tipo\\\"\\n                 name=\\\"tipo\\\"\\n                 formControlName=\\\"tipo\\\"\\n                 placeholder=\\\"Ingrese un dato valido\\\"\\n                 required>\\n          <div class=\\\"ng-invalid-feedback\\\"\\n               *ngIf=\\\"(form.get('tipo').invalid &&\\n                     form.get('tipo').dirty)\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n\\n\\n      <!-- direccion -->\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"bi-direccion\\\">Dirección</label>\\n        <div class=\\\"col-sm-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                 id=\\\"bi-direccion\\\"\\n                 name=\\\"direccion\\\"\\n                 formControlName=\\\"direccion\\\"\\n                 placeholder=\\\"Ingrese una dirección valida\\\"\\n                 required>\\n          <div class=\\\"ng-invalid-feedback\\\"\\n               *ngIf=\\\"(form.get('direccion').invalid &&\\n                     form.get('direccion').dirty)\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n\\n\\n      <!-- telefono -->\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"bi-telefono\\\">Telefono</label>\\n        <div class=\\\"col-sm-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                 id=\\\"bi-telefono\\\"\\n                 name=\\\"telefono\\\"\\n                 formControlName=\\\"telefono\\\"\\n                 placeholder=\\\"Ingrese un telefono valido\\\"\\n                 required>\\n          <div class=\\\"ng-invalid-feedback\\\"\\n               *ngIf=\\\"(form.get('telefono').invalid &&\\n                     form.get('telefono').dirty)\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- ciudad -->\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"bi-ciudad\\\">Ciudad</label>\\n        <div class=\\\"col-sm-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                 id=\\\"bi-ciudad\\\"\\n                 name=\\\"ciudad\\\"\\n                 formControlName=\\\"ciudad\\\"\\n                 placeholder=\\\"Ingrese una ciudad valida\\\"\\n                 required>\\n          <div class=\\\"ng-invalid-feedback\\\"\\n               *ngIf=\\\"(form.get('ciudad').invalid &&\\n                     form.get('ciudad').dirty)\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n\\n\\n      <!-- avaluo -->\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"bi-avaluo\\\">Avaluo</label>\\n        <div class=\\\"col-sm-9\\\">\\n          <input type=\\\"number\\\" class=\\\"form-control\\\"\\n                 id=\\\"bi-avaluo\\\"\\n                 name=\\\"avaluo\\\"\\n                 formControlName=\\\"avaluo\\\"\\n                 placeholder=\\\"Ingrese una valor valido\\\"\\n                 required>\\n          <div class=\\\"ng-invalid-feedback\\\"\\n               *ngIf=\\\"(form.get('avaluo').invalid &&\\n                     form.get('avaluo').dirty)\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- hipoteca -->\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"bi-hipoteca\\\">hipoteca</label>\\n        <div class=\\\"col-sm-9\\\">\\n          <div class=\\\"form-check form-check-inline\\\">\\n            <input class=\\\"form-check-input\\\"\\n                   type=\\\"radio\\\"\\n                   formControlName=\\\"hipoteca\\\"\\n                   id=\\\"bi-hipoteca\\\" [value]=\\\"true\\\">\\n            <label class=\\\"form-check-label\\\" for=\\\"bi-hipoteca\\\">Si</label>\\n          </div>\\n          <div class=\\\"form-check form-check-inline\\\">\\n            <input class=\\\"form-check-input\\\"\\n                   type=\\\"radio\\\"\\n                   formControlName=\\\"hipoteca\\\"\\n                   id=\\\"bi-hipoteca!\\\" [value]=\\\"false\\\">\\n            <label class=\\\"form-check-label\\\" for=\\\"bi-hipoteca!\\\">No</label>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn btn-secondary\\\" (click)=\\\"modal.close()\\\">Cerrar</button>\\n    <button class=\\\"btn btn-warning\\\" [disabled]=\\\"form.invalid\\\" (click)=\\\"update()\\\" *ngIf=\\\"isUpdate\\\">Actualizar</button>\\n    <button class=\\\"btn btn-primary\\\" [disabled]=\\\"form.invalid\\\" (click)=\\\"add()\\\" *ngIf=\\\"!isUpdate\\\">Guardar</button>\\n  </div>\\n</ng-template>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { Hijo } from '../../../interfaces';\n\n@Component({\n  selector: 'app-inmuebles',\n  templateUrl: './inmuebles.component.html',\n  styles: []\n})\nexport class InmueblesComponent implements OnInit {\n\n  form = this.fb.group({\n    id        : '',\n    clase     : ['', Validators.required],\n    modelo    : ['', Validators.required],\n    placa     : ['', Validators.required],\n    avaluo    : ['', Validators.required],\n    pignorado : [false, Validators.required],\n  });\n\n  isUpdate: boolean;\n  modalRef: NgbModalRef;\n  bienesInmuebles = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private modalService: NgbModal,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  open(content, data?: Hijo) {\n    this.isUpdate = false;\n\n    if (data) {\n      this.form.setValue(data);\n      this.isUpdate = true;\n    }\n\n    this.modalRef = this.modalService.open(content);\n  }\n\n  close() {\n    this.modalRef.close();\n  }\n\n  add() {\n\n    this.close();\n  }\n\n  update() {\n\n    this.close();\n  }\n\n  delete(id: number) {\n\n  }\n\n}\n","module.exports = \"<div class=\\\"card-header bg-white\\\">\\n  <h4>Visita domiciliaria de seguridad</h4>\\n</div>\\n<div class=\\\"card-body bg-light\\\">\\n\\n  <!--Egresos mensuales-->\\n\\n  <!-- card patrimonio bienes immuebles -->\\n\\n\\n  <!-- card bienes muebles -->\\n\\n\\n  <!-- card referencias bancarias -->\\n\\n\\n  <!-- card capacidad endeudamiento -->\\n\\n\\n  <!--Analisis patrimonial-->\\n  <!--<div class=\\\"card mt-3\\\">\\n    <div class=\\\"card-body \\\">\\n      <b class=\\\"card-title\\\">Analisis patrimonial</b>\\n      <hr>\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"analisisPatrimonial\\\">\\n          Análisis e interpretación patrimonial\\n          y financiera teniendo en cuenta la\\n          condición socioeconómica del\\n          candidato\\n        </label>\\n        <div class=\\\"col-sm-8\\\">\\n                <textarea name=\\\"analisisPatrimonial\\\"\\n                          id=\\\"analisisPatrimonial\\\" rows=\\\"3\\\"\\n                          class=\\\"form-control\\\" formControlName=\\\"analisisPatrimonial\\\"\\n                          placeholder=\\\"Ingrese el analisis\\\">\\n                </textarea>\\n          <div class=\\\"ng-invalid-feedback\\\"\\n               *ngIf=\\\"(formIngresos.controls['analisisPatrimonial'].invalid &&\\n                     formIngresos.controls['analisisPatrimonial'].dirty)\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>-->\\n\\n</div>\\n<div class=\\\"card-footer bg-white\\\">\\n  <button class=\\\"btn btn-primary\\\" (click)=\\\"saveAll()\\\" *ngIf=\\\"!dataLoaded\\\">Guardar</button>\\n</div>\\n\\n\\n<!-- Modal referencias bancarias -->\\n|\\n\\n<!-- Modal capacidad endeudamiento -->\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { ModusVivendiService } from '../../services/modus-vivendi.service';\n\n@Component({\n  selector: 'app-modus-vivendi',\n  templateUrl: './modus-vivendi.component.html',\n  styles: []\n})\nexport class ModusVivendiComponent implements OnInit {\n\n  isUpdate = false;\n\n  modalRef: NgbModalRef;\n  dataLoaded = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private modalService: NgbModal,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  open(content, data?) {\n    this.modalRef = this.modalService.open(content);\n  }\n\n}\n","module.exports = \"<div class=\\\"card mt-4\\\">\\r\\n  <div class=\\\"card-body \\\">\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label class=\\\"col-sm-6 col-form-label\\\">\\r\\n        <b>Patrimonio - Bienes Muebles</b>\\r\\n      </label>\\r\\n      <div class=\\\"col-sm-6\\\">\\r\\n        <div class=\\\"form-group text-right\\\">\\r\\n          <button (click)=\\\"open(mdBienMueble)\\\" class=\\\"btn btn-primary\\\">\\r\\n            <i class=\\\"fa fa-plus\\\"></i> Agregar\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-12\\\">\\r\\n        <hr>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-12 mt-2\\\">\\r\\n        <table class=\\\"table table-bordered\\\">\\r\\n          <thead class=\\\"text-capitalize\\\">\\r\\n          <th>clase</th>\\r\\n          <th>modelo</th>\\r\\n          <th>placa</th>\\r\\n          <th>avalúo</th>\\r\\n          <th>pignorado</th>\\r\\n          <th class=\\\"acciones\\\">acciones</th>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n          <tr *ngFor=\\\"let value of bienesMuebles\\\">\\r\\n            <td> {{ value.clase }}</td>\\r\\n            <td> {{ value.modelo }}</td>\\r\\n            <td> {{ value.placa }}</td>\\r\\n            <td> {{ value.avaluo }}</td>\\r\\n            <td> {{ value.pignorado === true ? 'Si' : 'No' }}</td>\\r\\n            <td class=\\\"acciones\\\">\\r\\n              <div class=\\\"text-center\\\">\\r\\n                <button class=\\\"btn btn-primary mr-2\\\" (click)=\\\"open(mdBienMueble, value)\\\">\\r\\n                  <i class=\\\"fa fa-edit\\\"></i>\\r\\n                </button>\\r\\n\\r\\n                <button class=\\\"btn btn-danger ml-2\\\" (click)=\\\"delete(value.id)\\\">\\r\\n                  <i class=\\\"fa fa-trash\\\"></i>\\r\\n                </button>\\r\\n              </div>\\r\\n            </td>\\r\\n          </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n        <hr>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<!-- Modal bien mueble -->\\r\\n<ng-template #mdBienMueble let-modal>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h5 class=\\\"modal-title\\\">Bienes muebles</h5>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"modal.close()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <form [formGroup]=\\\"form\\\">\\r\\n\\r\\n      <!-- clase -->\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"bm-clase\\\">Clase</label>\\r\\n        <div class=\\\"col-sm-9\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                 id=\\\"bm-clase\\\"\\r\\n                 name=\\\"clase\\\"\\r\\n                 formControlName=\\\"clase\\\"\\r\\n                 placeholder=\\\"Ingrese un dato valido\\\"\\r\\n                 required>\\r\\n          <div class=\\\"ng-invalid-feedback\\\"\\r\\n               *ngIf=\\\"(form.get('clase').invalid &&\\r\\n               form.get('clase').dirty)\\\">\\r\\n            El campo es requerido\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- modelo -->\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"bm-modelo\\\">Modelo</label>\\r\\n        <div class=\\\"col-sm-9\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                 id=\\\"bm-modelo\\\"\\r\\n                 name=\\\"modelo\\\"\\r\\n                 formControlName=\\\"modelo\\\"\\r\\n                 placeholder=\\\"Ingrese un dato valido\\\"\\r\\n                 required>\\r\\n          <div class=\\\"ng-invalid-feedback\\\"\\r\\n               *ngIf=\\\"(form.get('modelo').invalid &&\\r\\n               form.get('modelo').dirty)\\\">\\r\\n            El campo es requerido\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- placa -->\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"bm-placa\\\">Placa</label>\\r\\n        <div class=\\\"col-sm-9\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                 id=\\\"bm-placa\\\"\\r\\n                 name=\\\"placa\\\"\\r\\n                 formControlName=\\\"placa\\\"\\r\\n                 placeholder=\\\"Ingrese un dato valido\\\"\\r\\n                 required>\\r\\n          <div class=\\\"ng-invalid-feedback\\\"\\r\\n               *ngIf=\\\"(form.get('placa').invalid &&\\r\\n               form.get('placa').dirty)\\\">\\r\\n            El campo es requerido\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- avaluo -->\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"bm-avaluo\\\">Avalúo</label>\\r\\n        <div class=\\\"col-sm-9\\\">\\r\\n          <input type=\\\"number\\\" class=\\\"form-control\\\"\\r\\n                 id=\\\"bm-avaluo\\\"\\r\\n                 name=\\\"avaluo\\\"\\r\\n                 formControlName=\\\"avaluo\\\"\\r\\n                 placeholder=\\\"Ingrese un numero valido\\\"\\r\\n                 required>\\r\\n          <div class=\\\"ng-invalid-feedback\\\"\\r\\n               *ngIf=\\\"(form.get('avaluo').invalid &&\\r\\n               form.get('avaluo').dirty)\\\">\\r\\n            El campo es requerido\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- pignorado -->\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"bm-pignorado\\\">Pignorado</label>\\r\\n        <div class=\\\"col-sm-9\\\">\\r\\n          <div class=\\\"form-check form-check-inline\\\">\\r\\n            <input class=\\\"form-check-input\\\"\\r\\n                   type=\\\"radio\\\"\\r\\n                   formControlName=\\\"pignorado\\\"\\r\\n                   id=\\\"bm-pignorado\\\" [value]=\\\"true\\\">\\r\\n            <label class=\\\"form-check-label\\\" for=\\\"bm-pignorado\\\">Si</label>\\r\\n          </div>\\r\\n          <div class=\\\"form-check form-check-inline\\\">\\r\\n            <input class=\\\"form-check-input\\\"\\r\\n                   type=\\\"radio\\\"\\r\\n                   formControlName=\\\"pignorado\\\"\\r\\n                   id=\\\"bm-pignorado!\\\" [value]=\\\"false\\\">\\r\\n            <label class=\\\"form-check-label\\\" for=\\\"bm-pignorado!\\\">No</label>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button class=\\\"btn btn-secondary\\\" (click)=\\\"modal.close()\\\">Cerrar</button>\\r\\n    <button class=\\\"btn btn-warning\\\" [disabled]=\\\"form.invalid\\\" (click)=\\\"update()\\\" *ngIf=\\\"isUpdate\\\">Actualizar</button>\\r\\n    <button class=\\\"btn btn-primary\\\" [disabled]=\\\"form.invalid\\\" (click)=\\\"add()\\\" *ngIf=\\\"!isUpdate\\\">Guardar</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Hijo } from '../../../interfaces';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-muebles',\n  templateUrl: './muebles.component.html',\n  styles: []\n})\nexport class MueblesComponent implements OnInit {\n\n  form = this.fb.group({\n    id        : '',\n    clase     : ['', Validators.required],\n    modelo    : ['', Validators.required],\n    placa     : ['', Validators.required],\n    avaluo    : ['', Validators.required],\n    pignorado : [false, Validators.required],\n  });\n\n  isUpdate: boolean;\n  modalRef: NgbModalRef;\n  bienesMuebles = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private modalService: NgbModal,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  open(content, data?: Hijo) {\n    this.isUpdate = false;\n\n    if (data) {\n      this.form.setValue(data);\n      this.isUpdate = true;\n    }\n\n    this.modalRef = this.modalService.open(content);\n  }\n\n  close() {\n    this.modalRef.close();\n  }\n\n  add() {\n\n    this.close();\n  }\n\n  update() {\n\n    this.close();\n  }\n\n  delete(id: number) {\n\n  }\n\n}\n","module.exports = \"<div class=\\\"card mt-4\\\">\\n  <div class=\\\"card-body \\\">\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-6 col-form-label\\\">\\n        <b>Referencias bancarias</b>\\n      </label>\\n      <div class=\\\"col-sm-6\\\">\\n        <div class=\\\"form-group text-right\\\">\\n          <button (click)=\\\"open(mdRefBancarias)\\\" class=\\\"btn btn-primary\\\">\\n            <i class=\\\"fa fa-plus\\\"></i>\\n            Agregar\\n          </button>\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-12\\\">\\n        <hr>\\n      </div>\\n      <div class=\\\"col-sm-12 mt-2\\\">\\n        <table class=\\\"table table-bordered\\\">\\n          <thead class=\\\"text-capitalize\\\">\\n          <th>entidad</th>\\n          <th>tipo de cuenta</th>\\n          <th class=\\\"acciones\\\">acciones</th>\\n          </thead>\\n          <tbody>\\n          <tr *ngFor=\\\"let value of refBancarias\\\">\\n            <td> {{ value.entidad }} </td>\\n            <td> {{ value.tipoCuenta }} </td>\\n            <td class=\\\"acciones\\\">\\n              <div class=\\\"text-center\\\">\\n                <button class=\\\"btn btn-primary mr-2\\\" (click)=\\\"open(mdRefBancarias, value)\\\">\\n                  <i class=\\\"fa fa-edit\\\"></i>\\n                </button>\\n\\n                <button class=\\\"btn btn-danger ml-2\\\" (click)=\\\"delete(value.id)\\\">\\n                  <i class=\\\"fa fa-trash\\\"></i>\\n                </button>\\n              </div>\\n            </td>\\n          </tr>\\n          </tbody>\\n        </table>\\n        <hr>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #mdRefBancarias let-modal>\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">Referencias bancarias</h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"modal.close()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <form [formGroup]=\\\"form\\\">\\n\\n      <!-- entidad -->\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"bm-entidad\\\">Entidad</label>\\n        <div class=\\\"col-sm-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                 id=\\\"bm-entidad\\\"\\n                 name=\\\"entidad\\\"\\n                 formControlName=\\\"entidad\\\"\\n                 placeholder=\\\"Ingrese un dato valido\\\"\\n                 required>\\n          <div class=\\\"ng-invalid-feedback\\\"\\n               *ngIf=\\\"(form.get('entidad').invalid &&\\n                     form.get('entidad').dirty)\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- tipoCuenta -->\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"bm-tipoCuenta\\\">Tipo de Cuenta</label>\\n        <div class=\\\"col-sm-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                 id=\\\"bm-tipoCuenta\\\"\\n                 name=\\\"tipoCuenta\\\"\\n                 formControlName=\\\"tipoCuenta\\\"\\n                 placeholder=\\\"Ingrese un dato valido\\\"\\n                 required>\\n          <div class=\\\"ng-invalid-feedback\\\"\\n               *ngIf=\\\"(form.get('tipoCuenta').invalid &&\\n                     form.get('tipoCuenta').dirty)\\\">\\n            El campo es requerido\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"modal.close()\\\">Cerrar</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" [disabled]=\\\"form.invalid\\\" (click)=\\\"update()\\\" *ngIf=\\\"isUpdate\\\">Actualizar</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"form.invalid\\\" (click)=\\\"add()\\\" *ngIf=\\\"!isUpdate\\\">Guardar</button>\\n  </div>\\n</ng-template>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { Hijo } from '../../../interfaces';\n\n@Component({\n  selector: 'app-referencias-bancarias',\n  templateUrl: './referencias-bancarias.component.html',\n  styles: []\n})\nexport class ReferenciasBancariasComponent implements OnInit {\n  form = this.fb.group({\n    id         : '',\n    entidad    : ['', Validators.required],\n    tipoCuenta : ['', Validators.required],\n  });\n\n  isUpdate: boolean;\n\n  modalRef: NgbModalRef;\n  refBancarias = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private modalService: NgbModal,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  open(content, data?: Hijo) {\n    this.isUpdate = false;\n\n    if (data) {\n      this.form.setValue(data);\n      this.isUpdate = true;\n    }\n\n    this.modalRef = this.modalService.open(content);\n  }\n\n  close() {\n    this.modalRef.close();\n  }\n\n  add() {\n\n    this.close();\n  }\n\n  update() {\n\n    this.close();\n  }\n\n  delete(id: number) {\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MainComponent } from './components/main/main.component';\nimport { EstudioSeguridadComponent } from './components/estudio-seguridad/estudio-seguridad.component';\nimport { DatosPersonalesComponent } from './components/datos-personales/datos-personales.component';\nimport { FamiliaComponent } from './components/informacion-familiar/familia.component';\nimport { Informe2Component } from './components/informe2/informe2.component';\nimport { HistorialLaboralAcademicoComponent } from './components/historial-laboral-academico/historial-laboral-academico.component';\nimport { ModusVivendiComponent } from './components/modus-vivendi/modus-vivendi.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MainComponent,\n    children: [\n      { path: 'estudio-seguridad', component: EstudioSeguridadComponent },\n      { path: 'datos-personales', component: DatosPersonalesComponent },\n      { path: 'informacion-familiar', component: FamiliaComponent },\n      { path: 'informe2', component: Informe2Component },\n      { path: 'modus-vivendi', component: ModusVivendiComponent },\n      { path: 'historial-laboral-academico', component: HistorialLaboralAcademicoComponent},\n    ],\n  },\n  { path: '', redirectTo: 'estudio-seguridad', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InformeRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { InformeRoutingModule } from './informe-routing.module';\nimport { MainComponent } from './components/main/main.component';\nimport { EstudioSeguridadComponent } from './components/estudio-seguridad/estudio-seguridad.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DatosPersonalesComponent } from './components/datos-personales/datos-personales.component';\nimport { FamiliaComponent } from './components/informacion-familiar/familia.component';\nimport { Informe2Component } from './components/informe2/informe2.component';\nimport { HistorialLaboralAcademicoComponent } from './components/historial-laboral-academico/historial-laboral-academico.component';\nimport { ModusVivendiComponent } from './components/modus-vivendi/modus-vivendi.component';\nimport { InfoPersonalComponent } from './components/datos-personales/info-personal/info-personal.component';\nimport { EstadoSaludComponent } from './components/datos-personales/estado-salud/estado-salud.component';\nimport { HabitosSaludComponent } from './components/datos-personales/habitos-salud/habitos-salud.component';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromInforme from './store/reducers/informe.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { InformeEffects } from './store/effects/informe.effects';\nimport { NucleoFamiliarComponent } from './components/informacion-familiar/nucleo-familiar/nucleo-familiar.component';\nimport { HijosComponent } from './components/informacion-familiar/hijos/hijos.component';\nimport { InformacionFamiliarComponent } from './components/informacion-familiar/informacion-familiar/informacion-familiar.component';\nimport { ReferenciasComponent } from './components/informacion-familiar/referencias/referencias.component';\nimport { EntornoHabitacionalComponent } from './components/informe2/entorno-habitacional/entorno-habitacional.component';\nimport { CondicionesInmuebleComponent } from './components/informe2/condiciones-inmueble/condiciones-inmueble.component';\nimport { CondicionesSectorComponent } from './components/informe2/condiciones-sector/condiciones-sector.component';\nimport { IngresosComponent } from './components/modus-vivendi/ingresos/ingresos.component';\nimport { EgresosComponent } from './components/modus-vivendi/egresos/egresos.component';\nimport { InmueblesComponent } from './components/modus-vivendi/inmuebles/inmuebles.component';\nimport { MueblesComponent } from './components/modus-vivendi/muebles/muebles.component';\nimport { ReferenciasBancariasComponent } from './components/modus-vivendi/referencias-bancarias/referencias-bancarias.component';\nimport { CapacidadEndeudamientoComponent } from './components/modus-vivendi/capacidad-endeudamiento/capacidad-endeudamiento.component';\nimport { HistorialLaboralComponent } from './components/historial-laboral-academico/historial-laboral/historial-laboral.component';\nimport { NivelAcademicoComponent } from './components/historial-laboral-academico/nivel-academico/nivel-academico.component';\n\n@NgModule({\n  declarations: [\n    MainComponent,\n    EstudioSeguridadComponent,\n    DatosPersonalesComponent,\n    FamiliaComponent,\n    Informe2Component,\n    HistorialLaboralAcademicoComponent,\n    ModusVivendiComponent,\n    InfoPersonalComponent,\n    EstadoSaludComponent,\n    HabitosSaludComponent,\n    NucleoFamiliarComponent,\n    HijosComponent,\n    InformacionFamiliarComponent,\n    ReferenciasComponent,\n    EntornoHabitacionalComponent,\n    CondicionesInmuebleComponent,\n    CondicionesSectorComponent,\n    IngresosComponent,\n    EgresosComponent,\n    InmueblesComponent,\n    MueblesComponent,\n    ReferenciasBancariasComponent,\n    CapacidadEndeudamientoComponent,\n    HistorialLaboralComponent,\n    NivelAcademicoComponent,\n  ],\n  imports: [\n    CommonModule,\n    InformeRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    StoreModule.forFeature('informe', fromInforme.reducer),\n    EffectsModule.forFeature([InformeEffects])\n  ]\n})\nexport class InformeModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HelperService } from '../../../../../services/helper.service';\nimport { Store } from '@ngrx/store';\nimport { map, tap } from 'rxjs/operators';\nimport { InformeService } from '../informe.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InfoPersonalService {\n\n  constructor(\n    private http: HttpClient,\n    private helper: HelperService,\n    private informe: InformeService,\n    private store: Store<any>,\n  ) { }\n\n  get() {\n    const informeId = 1; // replace with sotore value\n    const url = this.helper.route(['informe', 'informacion-personal'], informeId);\n    return this.http.get(url).pipe(\n      map((response: any) => response.data)\n    );\n  }\n\n  save(payload) {\n    const url = this.helper.route('informacion-personal');\n    return this.http.post(payload, url);\n  }\n\n  update(payload) {\n    const url = this.helper.route('informacion-personal');\n    return this.http.put(payload, url);\n  }\n\n  delete(id) {\n    const url = this.helper.route('informacion-personal');\n    return this.http.delete(id);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { HttpClient } from '@angular/common/http';\nimport { HelperService } from '../../../../services/helper.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InformeService {\n\n  constructor(\n    private http: HttpClient,\n    private helper: HelperService,\n    private store: Store<any>,\n  ) { }\n\n  getId() {}\n  setId() {}\n  get() {\n    const vsId = 1; // replace with vsid\n    const url = this.helper.route('informe', vsId);\n    this.http.get(url);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HelperService } from '../../../../../services/helper.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EstudioSeguridadService {\n\n  constructor(\n    private http: HttpClient,\n    private helper: HelperService,\n  ) { }\n\n  get(vsdId) {\n    const route = this.helper.route('informe/vsd',  vsdId);\n    return this.http.get(route);\n\n  }\n\n  save(payload, vsdId) {\n    const route = this.helper.route('informe/vsd',  vsdId);\n    return this.http.post(route, payload);\n  }\n}\n","import { Action } from '@ngrx/store';\n\nexport enum InformeActionTypes {\n  LoadInforme         = '[Informe] Load Informe',\n  LoadInformeSuccess  = '[Informe] Load Informe Success',\n}\n\nexport class LoadInformes implements Action {\n  readonly type = InformeActionTypes.LoadInforme;\n}\n\nexport class LoadInformeSuccess implements Action {\n  readonly type = InformeActionTypes.LoadInforme;\n  constructor(public payload) { }\n}\n\nexport type InformeActions =\n  LoadInformes\n  | LoadInformeSuccess;\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\n\nimport { concatMap } from 'rxjs/operators';\nimport { EMPTY } from 'rxjs';\nimport { InformeActionTypes, InformeActions } from '../actions/informe.actions';\n\n\n@Injectable()\nexport class InformeEffects {\n\n\n  @Effect()\n  loadInformes$ = this.actions$.pipe(\n    ofType(InformeActionTypes.LoadInforme),\n    /** An EMPTY observable only emits completion. Replace with your own observable API request */\n    concatMap(() => EMPTY)\n  );\n\n\n  constructor(private actions$: Actions<InformeActions>) {}\n\n}\n","\nimport { InformeActions, InformeActionTypes } from '../actions/informe.actions';\n\nexport interface State {\n\n}\n\nexport const initialState: State = {\n\n};\n\nexport function reducer(state = initialState, action: InformeActions): State {\n  switch (action.type) {\n\n    case InformeActionTypes.LoadInforme:\n      return state;\n\n    default:\n      return state;\n  }\n}\n"],"sourceRoot":""}