{"version":3,"sources":["webpack:///./src/app/pages/control/components/administrador/administrador.component.css","webpack:///./src/app/pages/control/components/administrador/administrador.component.html","webpack:///./src/app/pages/control/components/administrador/administrador.component.ts","webpack:///./src/app/pages/control/components/analista-esp/analista-esp.component.html","webpack:///./src/app/pages/control/components/analista-esp/analista-esp.component.ts","webpack:///./src/app/pages/control/components/cliente/cliente.component.html","webpack:///./src/app/pages/control/components/cliente/cliente.component.ts","webpack:///./src/app/pages/control/components/detalle-actividades/detalle-actividades.component.html","webpack:///./src/app/pages/control/components/detalle-actividades/detalle-actividades.component.ts","webpack:///./src/app/pages/control/components/filtro/filtro.component.html","webpack:///./src/app/pages/control/components/filtro/filtro.component.ts","webpack:///./src/app/pages/control/components/freelance/freelance.component.html","webpack:///./src/app/pages/control/components/freelance/freelance.component.ts","webpack:///./src/app/pages/control/components/freelance/programacion/programacion.component.html","webpack:///./src/app/pages/control/components/freelance/programacion/programacion.component.ts","webpack:///./src/app/pages/control/components/freelance/seguimiento/seguimiento.component.html","webpack:///./src/app/pages/control/components/freelance/seguimiento/seguimiento.component.ts","webpack:///./src/app/pages/control/components/freelance/viaticos/viaticos.component.html","webpack:///./src/app/pages/control/components/freelance/viaticos/viaticos.component.ts","webpack:///./src/app/pages/control/components/main/main.component.html","webpack:///./src/app/pages/control/components/main/main.component.ts","webpack:///./src/app/pages/control/components/modal-servicio/modal-servicio.component.html","webpack:///./src/app/pages/control/components/modal-servicio/modal-servicio.component.ts","webpack:///./src/app/pages/control/control-routing.module.ts","webpack:///./src/app/pages/control/control.module.ts","webpack:///./src/app/pages/control/services/data.service.ts","webpack:///./src/app/pages/control/services/freelance/freelance.service.ts","webpack:///./src/app/pages/control/services/freelance/programacion.service.ts","webpack:///./src/app/pages/control/store/actions/servicios.actions.ts","webpack:///./src/app/pages/control/store/effects/index.ts","webpack:///./src/app/pages/control/store/effects/servicios.effects.ts","webpack:///./src/app/pages/control/store/reducers/index.ts","webpack:///./src/app/pages/control/store/reducers/servicios.reducer.ts","webpack:///./src/app/pages/control/store/selectors/index.ts","webpack:///./src/app/pages/freelance/services/seguimiento.service.ts","webpack:///./src/app/shared/services/actividad-aplicada.service.ts"],"names":[],"mappings":"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","file":"control-control-module.js","sourcesContent":["module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NvbnRyb2wvY29tcG9uZW50cy9hZG1pbmlzdHJhZG9yL2FkbWluaXN0cmFkb3IuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  administrador works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-administrador',\n  templateUrl: './administrador.component.html',\n  styleUrls: ['./administrador.component.css']\n})\nexport class AdministradorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<table class=\\\"table table-bordered table-hover table-sm\\\">\\n  <thead>\\n    <tr class=\\\"text-capitalize\\\">\\n      <th>centro de costo</th>\\n      <th>fecha creación</th>\\n      <th>lugar de desarrollo</th>\\n      <th>solicitante</th>\\n      <th>Servicio solicitado</th>\\n      <th>actividades</th>\\n      <th>estado</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let item of servicios\\\">\\n      <td> {{ item.centro_costo.id }} </td>\\n      <td> {{ item.fecha_creacion | date }} </td>\\n      <td> {{ item.lugar_desarrollo }} </td>\\n      <td> {{ item.centro_costo.solicitante }} </td>\\n      <td>\\n        <div *ngIf=\\\"item.tipo_servicio === 'esp'\\\" >\\n          <div class=\\\"form-group text-center\\\">\\n            <button class=\\\"btn btn-info text-center\\\" (click)=\\\"verDetalle(item)\\\">\\n              <i class=\\\"fa fa-eye\\\"></i>\\n              ESP\\n            </button>\\n          </div>\\n        </div>\\n      </td>\\n      <td>\\n        <div class=\\\"form-group text-center\\\">\\n          <button class=\\\"btn btn-danger text-center\\\" (click)=\\\"verActividades(mdActividad, item.id)\\\">\\n            <i class=\\\"fa fa-eye\\\"></i>\\n            Ver\\n          </button>\\n        </div>\\n      </td>\\n      <td>\\n        <div [ngSwitch]=\\\"item.estado\\\">\\n          <button *ngSwitchCase=\\\"'proceso'\\\" class=\\\"btn btn-sm btn-warning\\\">\\n            <i class=\\\"fa fas-exclamation\\\"></i>\\n            {{ item.estado }} </button>\\n          <button *ngSwitchCase=\\\"'completado'\\\" class=\\\"btn btn-sm btn-warning\\\"> {{ item.estado }} </button>\\n          <button *ngSwitchCase=\\\"'alerta'\\\" class=\\\"btn btn-sm btn-danger\\\" placement=\\\"top\\\" ngbTooltip=\\\"Comunicarse con Tss\\\">\\n            {{ item.estado }}\\n          </button>\\n          <button *ngSwitchCase=\\\"'finalizado'\\\" class=\\\"btn btn-sm btn-success\\\"> {{ item.estado }} </button>\\n        </div>\\n      </td>\\n      <td>\\n\\n      </td>\\n    </tr>\\n  </tbody>\\n</table>\\n\\n\\n<ng-template #mdActividad let-modal>\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\" id=\\\"exampleModalVerticalLabel\\\">Actividades Aplicadas</h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"modal.close()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-6\\\">\\n            <span>Actividad</span>\\n          </div>  \\n          <div class=\\\"col-sm-6 text-right\\\">\\n            <span>Estado</span>\\n          </div>\\n        </div>\\n      </li>\\n      <li class=\\\"list-group-item\\\" *ngFor=\\\"let actividad of actividades\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-6\\\">\\n            <div *ngIf=\\\"actividad.codigo === 'VDS'; else sinLink;\\\">\\n                <button class=\\\"btn btn-link\\\" (click)=\\\"open(mdFreelance, actividad)\\\">{{ actividad.nombre }}</button>\\n            </div>\\n            <ng-template #sinLink>\\n                <a >{{ actividad.nombre }}</a>\\n            </ng-template>\\n          </div>\\n          <div class=\\\"col-sm-6 text-right\\\">\\n            <div [ngSwitch]=\\\"actividad.estado\\\">\\n              <div *ngSwitchCase=\\\"'cargado'\\\">\\n                <span class=\\\"badge badge-pill service-loaded\\\"> {{ actividad.estado }} </span>\\n              </div>\\n              <div *ngSwitchCase=\\\"'asignado'\\\">\\n                <span class=\\\"badge badge-pill service-asigned\\\"> {{ actividad.estado }} </span>\\n              </div>\\n              <div *ngSwitchCase=\\\"'aceptado'\\\">\\n                <span class=\\\"badge badge-pill service-acepted\\\"> {{ actividad.estado }} </span>\\n              </div>\\n              <div *ngSwitchCase=\\\"'proceso'\\\">\\n                <span class=\\\"badge badge-pill service-process\\\"> {{ actividad.estado }} </span>\\n              </div>\\n              <div *ngSwitchCase=\\\"'completado'\\\">\\n                <span class=\\\"badge badge-pill service-finished\\\"> {{ actividad.estado }} </span>\\n              </div>\\n              <div *ngSwitchCase=\\\"'alerta'\\\">\\n                <span class=\\\"badge badge-pill  badge-danger\\\"> {{ actividad.estado }} </span>\\n              </div>\\n              <div *ngSwitchCase=\\\"'finalizado'\\\">\\n                <span class=\\\"badge badge-pill  badge-success\\\"> {{ actividad.estado }} </span>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">Cerrar</button>\\n  </div>\\n</ng-template>\\n\\n\\n<ng-template #mdFreelance let-modal>\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">Actividades Aplicadas</h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"modal.close()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"freelance\\\">Seleccionar freelance</label>\\n      <select name=\\\"freelance\\\" id=\\\"freelance\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"freelanceModel.freelance_id\\\">\\n        <option [selected]=\\\"true\\\">Seleccione una opcion</option>\\n        <option *ngFor=\\\"let item of freelances\\\" [value]=\\\"item.id\\\">{{ item.nombre }}</option>\\n      </select>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn btn-outline-primary\\\" [disabled]=\\\"freelanceModel.freelance_id == 0\\\" (click)=\\\"asignarFreelance()\\\">Asignar Visita domiciliaria</button>\\n  </div>\\n</ng-template>\\n\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { ServicioState } from '../../store/states';\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { HelperService } from '../../../../services/helper.service';\nimport { getServicios } from '../../store/selectors';\nimport { FetchServicios, RemoveServicios } from '../../store/actions/servicios.actions';\nimport { ModalServicioComponent } from '../modal-servicio/modal-servicio.component';\nimport { ActividadAplicadaService } from '../../../../shared/services/actividad-aplicada.service';\nimport { DataService } from '../../services/data.service';\n\n@Component({\n  selector: 'app-analista-esp',\n  templateUrl: './analista-esp.component.html',\n  styles: []\n})\nexport class AnalistaEspComponent implements OnInit, OnDestroy {\n\n  servicios = [];\n  actividades = [];\n  freelances = [];\n  selectedItem;\n\n  modalRef: NgbModalRef;\n\n  freelanceModel = {\n    freelance_id: 0,\n  };\n\n  constructor(\n    private store: Store<ServicioState>,\n    private modalService: NgbModal,\n    private helper: HelperService,\n    private actividadAplicadaService: ActividadAplicadaService,\n    private dataService: DataService,\n  ) { }\n\n  ngOnInit() {\n    this.store.select(getServicios).subscribe(state => this.servicios = state);\n    this.store.dispatch(new FetchServicios());\n    this.dataService.getFreelances().subscribe(response => this.freelances = response)\n  }\n\n  ngOnDestroy() {\n    console.log('Destroy aesp');\n    this.store.dispatch(new RemoveServicios());\n  }\n\n  open(content, item) {\n    this.modalRef = this.modalService.open(content);\n    this.selectedItem = item;\n  }\n\n  makeFileUrl(fileName: string) {\n    return this.helper.makeFileUrl(fileName);\n  }\n\n  verDetalle(item: any) {\n    const modalRef = this.modalService.open(ModalServicioComponent, { size: 'lg' });\n    modalRef.componentInstance.servicio = item;\n  }\n\n  verActividades(content, espId) {\n    this.actividadAplicadaService.getFromEsp(espId).subscribe(\n      response => {\n        this.actividades = response;\n        this.modalService.open(content);\n      }\n    );\n  }\n\n  asignarFreelance() {\n    ///\n    const data = {\n      usuario_id: this.freelanceModel.freelance_id,\n      estado: 'asignado',\n    };\n\n    this.dataService.asignarVisitaDom(this.selectedItem.id, data).subscribe(\n      () => {\n        this.modalRef.close();\n        this.actividades[this.actividades.indexOf(this.selectedItem)].estado = data.estado;\n      },\n      () => {\n        alert('Ocurrio un error, intente mas tarde');\n      }\n    );\n  }\n\n  selectAction() {\n\n  }\n}\n","module.exports = \"<table class=\\\"table table-bordered table-hover table-sm\\\">\\n  <thead>\\n    <tr class=\\\"text-capitalize\\\">\\n      <th>centro de costo</th>\\n      <th>fecha creación</th>\\n      <th>lugar de desarrollo</th>\\n      <th>solicitante</th>\\n      <th>Servicio solicitado</th>\\n      <th>informe</th>\\n      <th>estado</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n  <tr *ngFor=\\\"let item of servicios\\\">\\n    <td> {{ item.centro_costo.id }} </td>\\n    <td> {{ item.fecha_creacion | date }} </td>\\n    <td> {{ item.lugar_desarrollo }} </td>\\n    <td> {{ item.centro_costo.solicitante }} </td>\\n    <td>\\n      <div *ngIf=\\\"item.tipo_servicio === 'esp'\\\" >\\n        <div class=\\\"form-group text-center\\\">\\n          <button class=\\\"btn btn-sm btn-info text-center\\\" (click)=\\\"verDetalle(item)\\\">\\n            <i class=\\\"fa fa-eye\\\"></i>\\n            ESP\\n          </button>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"item.tipo_servicio === 'inv'\\\" >\\n        <div class=\\\"form-group text-center\\\">\\n          <div class=\\\"form-group text-center\\\">\\n            INVESTIGACION\\n          </div>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"item.tipo_servicio === 'pol'\\\">\\n        <div class=\\\"form-group text-center\\\">\\n          <button class=\\\"btn btn-sm btn-info text-center\\\" (click)=\\\"verDetalle(item)\\\">\\n            <i class=\\\"fa fa-eye\\\"></i>\\n            POLIGRAFIA\\n          </button>\\n        </div>\\n      </div>\\n    </td>\\n    <td>\\n      <div class=\\\"form-group text-center\\\" *ngIf=\\\"item.informe\\\">\\n        <a [href]=\\\"makeFileUrl(item.informe)\\\" class=\\\"btn btn-primary\\\">\\n          <i class=\\\"fa fa-file\\\"></i>\\n        </a>\\n      </div>\\n    </td>\\n\\n    <td>\\n\\n      <div *ngIf=\\\"item.tipo_servicio == 'pol' || item.tipo_servicio == 'inv'\\\">\\n        <div [ngSwitch]=\\\"item.estado\\\">\\n          <span *ngSwitchCase=\\\"'proceso'\\\" class=\\\"badge badge badge-warning\\\">{{ item.estado }} </span>\\n          <span *ngSwitchCase=\\\"'completado'\\\" class=\\\"badge badge badge-warning\\\"> {{ item.estado }} </span>\\n          <span *ngSwitchCase=\\\"'alerta'\\\" class=\\\"badge badge badge-danger\\\" placement=\\\"top\\\" ngbTooltip=\\\"Comunicarse con Tss\\\">\\n            {{ item.estado }}\\n          </span>\\n          <span *ngSwitchCase=\\\"'finalizado'\\\" class=\\\"badge badge badge-success\\\"> {{ item.estado }} </span>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"item.tipo_servicio == 'esp'\\\">\\n        <div [ngSwitch]=\\\"item.estado\\\">\\n          <button *ngSwitchCase=\\\"'proceso'\\\" class=\\\"btn btn-sm btn-warning\\\" (click)=\\\"verActividades(item)\\\">\\n            <i class=\\\"fa fas-eye\\\"></i>\\n            {{ item.estado }} </button>\\n          <button *ngSwitchCase=\\\"'completado'\\\" class=\\\"btn btn-sm btn-warning\\\"> {{ item.estado }} </button>\\n          <button *ngSwitchCase=\\\"'alerta'\\\" class=\\\"btn btn-sm btn-danger\\\" placement=\\\"top\\\" ngbTooltip=\\\"Comunicarse con Tss\\\">\\n            {{ item.estado }}\\n          </button>\\n          <button *ngSwitchCase=\\\"'finalizado'\\\" class=\\\"btn btn-sm btn-success\\\"> {{ item.estado }} </button>\\n        </div>\\n      </div>\\n\\n    </td>\\n  </tr>\\n  </tbody>\\n</table>\\n\"","import { Component, ElementRef, OnInit } from '@angular/core';\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { HelperService } from '../../../../services/helper.service';\nimport { Store } from '@ngrx/store';\nimport { ServicioState } from '../../store/states';\nimport { getServicios } from '../../store/selectors';\nimport { FetchServicios } from '../../store/actions/servicios.actions';\nimport { ModalServicioComponent } from '../modal-servicio/modal-servicio.component';\nimport { EspService } from 'src/app/pages/shared/services';\nimport { DetalleActividadesComponent } from '../detalle-actividades/detalle-actividades.component';\n\n@Component({\n  selector: 'app-cliente',\n  templateUrl: './cliente.component.html',\n  styles: []\n})\nexport class ClienteComponent implements OnInit {\n\n  servicios = [];\n\n  constructor(\n    private store: Store<ServicioState>,\n    private modalService: NgbModal,\n    private helper: HelperService,\n    private espService: EspService,\n  ) { }\n\n  ngOnInit() {\n    this.store.select(getServicios).subscribe(\n      state => this.servicios = state\n    );\n    this.store.dispatch(new FetchServicios());\n  }\n\n  makeFileUrl(fileName: string) {\n    return this.helper.makeFileUrl(fileName);\n  }\n\n  verDetalle(item: any) {\n    const modalRef = this.modalService.open(ModalServicioComponent, { size: 'lg' });\n    modalRef.componentInstance.servicio = item;\n  }\n\n  verActividades(item: any) {\n    this.espService.getActividades(item.id).subscribe(\n      response => {\n        const modalRef = this.modalService.open(DetalleActividadesComponent);\n        modalRef.componentInstance.actividades = response;\n      },\n      () => alert('Este servicio no tiene actividades')\n    );\n  }\n}\n","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h5 class=\\\"modal-title\\\" id=\\\"exampleModalVerticalLabel\\\">Actividades Aplicadas</h5>\\n  <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"activedModal.close()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-6\\\">\\n          <span>Actividad</span>\\n        </div>\\n        <div class=\\\"col-sm-6 text-right\\\">\\n          <span>Estado</span>\\n        </div>\\n      </div>\\n    </li>\\n    <li class=\\\"list-group-item\\\" *ngFor=\\\"let actividad of actividades\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-6\\\">\\n          <a >\\n            {{ actividad.nombre }}\\n          </a>\\n        </div>\\n        <div class=\\\"col-sm-6 text-right\\\">\\n          <div *ngIf=\\\"rol !== 'CLI'\\\">\\n            <div [ngSwitch]=\\\"actividad.estado\\\">\\n              <div *ngSwitchCase=\\\"'cargado'\\\">\\n                <span class=\\\"badge badge-pill service-loaded\\\"> {{ actividad.estado }} </span>\\n              </div>\\n              <div *ngSwitchCase=\\\"'asignado'\\\">\\n                <span class=\\\"badge badge-pill service-asigned\\\"> {{ actividad.estado }} </span>\\n              </div>\\n              <div *ngSwitchCase=\\\"'aceptado'\\\">\\n                <span class=\\\"badge badge-pill service-acepted\\\"> {{ actividad.estado }} </span>\\n              </div>\\n              <div *ngSwitchCase=\\\"'proceso'\\\">\\n                <span class=\\\"badge badge-pill service-process\\\"> {{ actividad.estado }} </span>\\n              </div>\\n              <div *ngSwitchCase=\\\"'completado'\\\">\\n                <span class=\\\"badge badge-pill service-finished\\\"> {{ actividad.estado }} </span>\\n              </div>\\n              <div *ngSwitchCase=\\\"'alerta'\\\">\\n                <span class=\\\"badge badge-pill  badge-danger\\\"> {{ actividad.estado }} </span>\\n              </div>\\n              <div *ngSwitchCase=\\\"'finalizado'\\\">\\n                <span class=\\\"badge badge-pill  badge-success\\\"> {{ actividad.estado }} </span>\\n              </div>\\n            </div>\\n          </div>\\n          <div *ngIf=\\\"rol === 'CLI'\\\">\\n            <div [ngSwitch]=\\\"actividad.estado\\\">\\n              <div *ngSwitchCase=\\\"'cargado'\\\">\\n                <span class=\\\"badge badge-pill service-loaded\\\"> {{ actividad.estado }} </span>\\n              </div>\\n              <div *ngSwitchCase=\\\"'completado'\\\">\\n                <span class=\\\"badge badge-pill service-finished\\\"> {{ actividad.estado }} </span>\\n              </div>\\n              <div *ngSwitchCase=\\\"'alerta'\\\">\\n                <span class=\\\"badge badge-pill  badge-danger\\\"> {{ actividad.estado }} </span>\\n              </div>\\n              <div *ngSwitchDefault>\\n                <span class=\\\"badge badge-pill service-process\\\"> Proceso </span>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </li>\\n  </ul>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"activedModal.close()\\\">Cerrar</button>\\n</div>\\n\"","import { Component, Input, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { AuthService } from '../../../../services/auth/auth.service';\n\n@Component({\n  selector: 'app-detalle-actividades',\n  templateUrl: './detalle-actividades.component.html',\n  styles: []\n})\nexport class DetalleActividadesComponent implements OnInit {\n\n  @Input() actividades: any;\n\n  rol: any;\n\n  constructor(\n    private activedModal: NgbActiveModal,\n    private authService: AuthService,\n  ) { }\n\n  ngOnInit() {\n    this.rol = this.authService.getUser().user.rol.codigo;\n  }\n\n}\n","module.exports = \"<div class=\\\"form-group mt-2 text-right\\\">\\n  <div class=\\\"input-group input-group-sm col-sm-6 offset-sm-6\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n      <span class=\\\"input-group-text\\\">Filtrar por fecha</span>\\n    </div>\\n    <input type=\\\"date\\\" class=\\\"form-control\\\" #date1>\\n    <input type=\\\"date\\\" class=\\\"form-control\\\" #date2>\\n    <button type=\\\"button\\\" (click)=\\\"filtrarServicios('date', {date: [date1.value, date2.value]})\\\" class=\\\"btn btn-success btn-sm\\\"><i class=\\\"fa fa-check\\\"></i> Filtrar</button>&nbsp;\\n    <button type=\\\"button\\\" (click)=\\\"reiniciar()\\\" class=\\\"btn btn-danger btn-sm\\\">\\n      <i class=\\\"fa fa-check\\\"></i>\\n      Reiniciar\\n    </button>\\n  </div>\\n</div>\\n\\n<div class=\\\"form-group mt-2 text-right\\\">\\n  <div class=\\\"input-group input-group-sm col-sm-6 offset-sm-6\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n      <span class=\\\"input-group-text\\\">Filtrar por</span>\\n    </div>\\n    <select name=\\\"opciones\\\" id=\\\"options\\\" class=\\\"form-control text-capitalize\\\" #$filtro>\\n      <option *ngFor=\\\"let e of filtro\\\" [value]=\\\"e.value\\\">{{ e.title }}</option>\\n    </select>\\n\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Busqueda\\\" (keydown.enter)=\\\"filtrarServicios($filtro.value, busqueda.value)\\\" #busqueda>\\n\\n    <button type=\\\"button\\\" (click)=\\\"filtrarServicios($filtro.value, busqueda.value)\\\" class=\\\"btn btn-success btn-sm\\\"><i class=\\\"fa fa-check\\\"></i> Buscar</button>&nbsp;\\n    <button type=\\\"button\\\" (click)=\\\"reiniciar()\\\" class=\\\"btn btn-danger btn-sm\\\"><i class=\\\"fa fa-check\\\"></i> Reiniciar</button>&nbsp;\\n\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-filtro',\n  templateUrl: './filtro.component.html',\n  styles: []\n})\nexport class FiltroComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<table class=\\\"table table-bordered table-hover table-sm\\\">\\n  <thead>\\n  <tr class=\\\"text-capitalize\\\">\\n    <th>fecha creación</th>\\n    <th>fecha entrega</th>\\n    <th>analista</th>\\n    <th>cliente</th>\\n    <th>lugar de desarrollo</th>\\n    <th>Servicio</th>\\n    <th>estado</th>\\n    <th>informe</th>\\n    <th>aceptacion</th>\\n  </tr>\\n  </thead>\\n  <tbody>\\n  <tr *ngFor=\\\"let item of servicios\\\">\\n    <td> {{ item.fecha_creacion | date }} </td>\\n    <td> {{ item.fecha_entrega | date }} </td>\\n    <td> {{ item.analista_esp.nombre }} </td>\\n    <td> {{ item.centro_costo.cliente.nombre }} </td>\\n    <td> {{ item.lugar_desarrollo }} </td>\\n    <td>\\n      <div class=\\\"form-group text-center\\\">\\n        <button class=\\\"btn btn-sm btn-info text-center\\\" (click)=\\\"verDetalle(mdServicio, item)\\\">\\n          <i class=\\\"fa fa-eye\\\"></i>\\n          Ver detalle\\n        </button>\\n      </div>\\n    </td>\\n    <td>\\n      <div [ngSwitch]=\\\"item.vsd.estado\\\">\\n        <div *ngSwitchCase=\\\"'cargado'\\\">\\n          <span class=\\\"badge badge-pill service-loaded\\\"> {{ item.estado }} </span>\\n        </div>\\n        <div *ngSwitchCase=\\\"'asignado'\\\">\\n          <span class=\\\"badge badge-pill service-asigned\\\"> {{ item.estado }} </span>\\n        </div>\\n        <div *ngSwitchCase=\\\"'aceptado'\\\">\\n          <span class=\\\"badge badge-pill service-acepted\\\"> {{ item.estado }} </span>\\n        </div>\\n        <div *ngSwitchCase=\\\"'proceso'\\\">\\n          <span class=\\\"badge badge-pill service-process\\\"> {{ item.estado }} </span>\\n        </div>\\n        <div *ngSwitchCase=\\\"'completado'\\\">\\n          <span class=\\\"badge badge-pill service-finished\\\"> {{ item.estado }} </span>\\n        </div>\\n        <div *ngSwitchCase=\\\"'alerta'\\\">\\n          <span class=\\\"badge badge-pill  badge-danger\\\"> {{ item.estado }} </span>\\n        </div>\\n        <div *ngSwitchCase=\\\"'finalizado'\\\">\\n          <span class=\\\"badge badge-pill  badge-success\\\"> {{ item.estado }} </span>\\n        </div>\\n      </div>\\n\\n    </td>\\n    <td>\\n      <button (click)=\\\"agregarInformacion(item)\\\" *ngIf=\\\"item.vsd.estado == 'aceptado'\\\" class=\\\"btn btn-warning btn-sm\\\">\\n        Informe\\n      </button>\\n    </td>\\n    <td>\\n      <div>\\n        <button [disabled]=\\\"(item.vsd.estado == 'aceptado')\\\" class=\\\"btn btn-primary btn-sm text-center mb-1 ml-2 mr-2\\\" (click)=\\\"aceptarServicio(item)\\\">\\n          <i class=\\\"fa fa-check\\\"></i>\\n          Aceptar\\n        </button>\\n        <button [disabled]=\\\"(item.vsd.estado == 'aceptado')\\\" class=\\\"btn btn-danger btn-sm text-center ml-2 mr-2\\\" (click)=\\\"rechazarServicio(mdRechazarServicio, item)\\\">\\n          <i class=\\\"fa fa-times\\\"></i>\\n          Rechazar\\n        </button>\\n      </div>\\n    </td>\\n  </tr>\\n  </tbody>\\n</table>\\n\\n<ng-template #mdRechazarServicio let-modal>\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\" id=\\\"exampleModalVerticalLabel\\\">\\n      observaciones de rechazo\\n    </h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"modal.close()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"justificacionRechazo\\\">¿Porque rechaza el servicio?</label>\\n      <textarea class=\\\"form-control\\\"\\n                id=\\\"justificacionRechazo\\\" rows=\\\"4\\\"\\n                placeholder=\\\"Describa los motivos de rechazo del servicio\\\" [formControl]=\\\"justificacionRechazo\\\"></textarea>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" [disabled]=\\\"justificacionRechazo.invalid\\\" (click)=\\\"guardarRechazo()\\\">\\n      <i class=\\\"fa fa-save\\\"></i>\\n      Guardar justificacion\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">\\n      <i class=\\\"fa fa-times\\\"></i>\\n      Cerrar</button>\\n  </div>\\n\\n</ng-template>\\n\\n<ng-template #mdServicio let-modal>\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">\\n      Servicio ESP\\n    </h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"modal.close()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <ngb-tabset>\\n      <ngb-tab title=\\\"Evaluado\\\" id=\\\"evaluado\\\">\\n        <ng-template ngbTabContent>\\n            <div class=\\\"card-body\\\">\\n                <fieldset disabled>\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-6\\\">\\n                      <!--evaluado-->\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"m-evaluado\\\">Nombre del evaluado</label>\\n                        <input type=\\\"text\\\" id=\\\"m-evaluado\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedItem.evaluado.evaluado\\\">\\n                      </div>\\n              \\n                      <!--tipo documento-->\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"m-tipoDocumento\\\">Tipo de documento</label>\\n                        <select class=\\\"form-control\\\" [(ngModel)]=\\\"selectedItem.evaluado.tipo_documento\\\" id=\\\"m-tipoDocumento\\\">\\n                          <option value=\\\"cc\\\">C.C. Cedula</option>\\n                          <option value=\\\"ti\\\">T.I. Tarjeta de identidad</option>\\n                          <option value=\\\"ce\\\">C.E. Cedula de extrangeria</option>\\n                          <option value=\\\"pa\\\">P.A. Pasaporte</option>\\n                          <option value=\\\"pep\\\">P.E.P. Permiso especial de permanencia</option>\\n                        </select>\\n                      </div>\\n              \\n                      <!--documento-->\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"m-documento\\\">Numero de documento</label>\\n                        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"m-documento\\\"  [(ngModel)]=\\\"selectedItem.evaluado.documento\\\">\\n                      </div>\\n              \\n                      <!--lugar desarrollo-->\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"m-ciudad\\\">Lugar de desarrollo</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"m-ciudad\\\"  [(ngModel)]=\\\"selectedItem.lugar_desarrollo\\\">\\n                      </div>\\n              \\n                      <!--telefono-->\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"m-telefono\\\">Telefono</label>\\n                        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"m-telefono\\\"  [(ngModel)]=\\\"selectedItem.evaluado.telefono\\\">\\n                      </div>\\n              \\n                    </div>\\n                    <div class=\\\"col-md-6\\\">\\n              \\n                      <!--email-->\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"m-email\\\">Email</label>\\n                        <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"m-email\\\"  [(ngModel)]=\\\"selectedItem.evaluado.email\\\">\\n                      </div>\\n              \\n                      <!--cargo-->\\n                      <div class=\\\"form-group\\\">\\n                          <label for=\\\"m-email\\\">Cargo</label>\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"m-email\\\"  [(ngModel)]=\\\"selectedItem.evaluado.cargo\\\">\\n                        </div>\\n              \\n                      <!--observaciones-->\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"m-obs\\\">Observaciones</label>\\n                        <textarea\\n                          rows=\\\"3\\\"\\n                          class=\\\"form-control\\\"\\n                          id=\\\"m-obs\\\"\\n                          [(ngModel)]=\\\"selectedItem.observaciones\\\">\\n                            </textarea>\\n                      </div>\\n              \\n                      <!-- tipo servicio -->\\n                      <div class=\\\"form-group\\\">\\n                        <ng-container [ngSwitch]=\\\"selectedItem.tipoServicio\\\">\\n                          <div *ngSwitchCase=\\\"'esp'\\\">\\n                            <label>Tipo de esp</label>\\n                            <div class=\\\"d-block\\\">\\n                              <span class=\\\"badge badge-success\\\">{{ selectedItem.tipo_esp }}</span>\\n                            </div>\\n                          </div>\\n                          <div *ngSwitchCase=\\\"'pol'\\\">\\n                            <label>Tipo de poligrafia</label>\\n                            <div class=\\\"d-block\\\">\\n                              <span class=\\\"badge badge-success\\\">{{ selectedItem.tipo_poligrafia }}</span>\\n                            </div>\\n                          </div>\\n                        </ng-container>\\n                      </div>\\n              \\n                      <!-- anexo -->\\n                      <div class=\\\"form-group\\\" *ngIf=\\\"selectedItem.anexo\\\">\\n                        <div class=\\\"d-block\\\">\\n                          <a [href]=\\\"makeFileUrl(selectedItem.anexo)\\\">\\n                            <i class=\\\"fa fa-file\\\"></i>\\n                            {{ selectedItem.anexo }}\\n                          </a>\\n                        </div>\\n                        <label>Anexo</label>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </fieldset>\\n              </div>\\n        </ng-template>\\n      </ngb-tab>\\n      <ngb-tab title=\\\"Programacion\\\" id=\\\"programacion\\\">\\n        <ng-template ngbTabContent>\\n          <app-programacion ></app-programacion>\\n        </ng-template>\\n      </ngb-tab>\\n      <ngb-tab title=\\\"Seguimiento\\\" id=\\\"seguimiento\\\">\\n        <ng-template ngbTabContent>\\n          <app-seguimiento></app-seguimiento>\\n        </ng-template>\\n      </ngb-tab>\\n      <ngb-tab title=\\\"Viaticos\\\" id=\\\"viaticos\\\">\\n        <ng-template ngbTabContent>\\n          <app-viaticos></app-viaticos>\\n        </ng-template>\\n      </ngb-tab>\\n    </ngb-tabset>\\n  </div>\\n  <div class=\\\"card-footer\\\"></div>\\n\\n</ng-template>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { ServicioState } from '../../store/states';\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { HelperService } from '../../../../services/helper.service';\nimport { getServicios } from '../../store/selectors';\nimport { FetchServicios } from '../../store/actions/servicios.actions';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { DataService } from '../../../../services/data.service';\nimport { Router } from '@angular/router';\nimport { FreelanceService } from '../../services/freelance/freelance.service';\nimport { LoginService } from '../../../../services/login.service';\nimport { AuthService } from '../../../../services/auth/auth.service';\nimport { VsdService } from '../../../../services/vsd.service';\n\n@Component({\n  selector: 'app-freelance',\n  templateUrl: './freelance.component.html',\n  styles: []\n})\nexport class FreelanceComponent implements OnInit {\n\n  justificacionRechazo = this.fb.control('', Validators.required);\n  servicios = [];\n  private modalRef: NgbModalRef;\n\n  selectedItem;\n\n\n  constructor(\n    private dataService: DataService,\n    private fb: FormBuilder,\n    private store: Store<ServicioState>,\n    private modalService: NgbModal,\n    private helper: HelperService,\n    private http: HttpClient,\n    private router: Router,\n    private freelanceService: FreelanceService,\n    private authService: AuthService,\n    private loginService: LoginService,\n    private vsdService: VsdService,\n  ) { }\n\n  ngOnInit() {\n\n    this.store.select(getServicios).subscribe(\n      state => {\n        this.servicios = state;\n        this.servicios.forEach(value => {\n          value['vsd'] = value.actividades.filter(act => act.actividad_id === 2)[0];\n        });\n      }\n    );\n    this.store.dispatch(new FetchServicios());\n  }\n\n  makeFileUrl(fileName: string) {\n    return this.helper.makeFileUrl(fileName);\n  }\n\n  verDetalle(content, item: any) {\n    this.selectedItem = item;\n    this.freelanceService.setEsp(item);\n    const modalRef = this.modalService.open(content, { size: 'lg' });\n  }\n\n  aceptarServicio(item: any) {\n    const data = {\n      actividad_aplicada_id: item.vsd.id,\n    };\n    this.freelanceService.aceptarVisitaDom(item.id, data).subscribe(\n      () => item.vsd.estado = 'aceptado',\n      () => alert('Ocurrio un error, intente mas tarde')\n    );\n  }\n\n  rechazarServicio(content, item) {\n    this.modalRef = this.modalService.open(content);\n    this.selectedItem  = item;\n  }\n\n  guardarRechazo() {\n    const data = {\n      estado: 'rechazado',\n      justificacion_rechazo: this.justificacionRechazo.value,\n      freelance_id: this.authService.getUser().user.id,\n    };\n    \n    this.freelanceService.rechazarVisitaDom(this.selectedItem.id, data).subscribe(\n      () => {\n        this.modalRef.close();\n        this.servicios.splice(this.servicios.indexOf(this.selectedItem), 1);\n      },\n      () => {\n        alert('Ocurrio un error, intente mas tarde')\n      }\n    );\n  }\n\n  agregarInformacion(item) {\n    this.vsdService.loadVsd(item.id).subscribe((response: any) => {\n      this.vsdService.setVsd(response.id);\n      this.router.navigate(['/informe/estudio-seguridad']);\n    });\n  }\n\n  navigateToInfo() {\n\n  }\n}\n","module.exports = \"<div class=\\\"col-md-11 mx-auto m-4\\\">\\r\\n  <div class=\\\"card border-0\\\">\\r\\n    <div class=\\\"card-header bg-white\\\">\\r\\n      <i class=\\\"fa fa-calendar\\\"></i>\\r\\n      Programación\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <form [formGroup]=\\\"form\\\" *ngIf=\\\"!isLoadData\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"fecha\\\" class=\\\"col-form-label col-md-3\\\">\\r\\n            Fecha de visita\\r\\n          </label>\\r\\n          <input type=\\\"date\\\" class=\\\"form-control col-md-9\\\" id=\\\"fecha\\\" formControlName=\\\"fecha\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"hora\\\" class=\\\"col-form-label col-md-3\\\">\\r\\n            Hora de visita\\r\\n          </label>\\r\\n          <input type=\\\"time\\\" class=\\\"form-control col-md-9\\\" id=\\\"hora\\\" formControlName=\\\"hora\\\">\\r\\n        </div>\\r\\n      </form>\\r\\n      <fieldset *ngIf=\\\"isLoadData\\\" disabled>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-form-label col-md-3\\\">\\r\\n            Fecha de visita\\r\\n          </label>\\r\\n          <input type=\\\"datetime-local\\\" class=\\\"form-control col-md-9\\\" [(ngModel)]=\\\"data.fecha\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-form-label col-md-3\\\">\\r\\n            Hora de visita\\r\\n          </label>\\r\\n          <input type=\\\"time\\\" class=\\\"form-control col-md-9\\\" [(ngModel)]=\\\"data.hora\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\" *ngIf=\\\"data.motivo\\\">\\r\\n          <label class=\\\"col-form-label col-md-3\\\">\\r\\n            Motivo de visita\\r\\n          </label>\\r\\n          <input type=\\\"time\\\" class=\\\"form-control col-md-9\\\" [(ngModel)]=\\\"data.motivo\\\">\\r\\n        </div>\\r\\n      </fieldset>\\r\\n    </div>\\r\\n    <div class=\\\"card-footer bg-white\\\">\\r\\n      <button *ngIf=\\\"!isLoadData\\\" class=\\\"btn btn-outline-primary mr-2\\\"\\r\\n              (click)=\\\"programar()\\\">Programar visita\\r\\n      </button>\\r\\n      <button *ngIf=\\\"isLoadData\\\" class=\\\"btn btn-outline-secondary\\\"\\r\\n              (click)=\\\"open(mdReprog)\\\">Reprogramar visita\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #mdReprog let-modal>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h3 class=\\\"card-title\\\">Reprogramar</h3>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <form [formGroup]=\\\"form\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"repFecha\\\">Fecha</label>\\r\\n        <input type=\\\"date\\\" id=\\\"repFecha\\\" class=\\\"form-control\\\" formControlName=\\\"fecha\\\">\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"repHora\\\">Hora</label>\\r\\n        <input type=\\\"time\\\" id=\\\"repHora\\\" class=\\\"form-control\\\" formControlName=\\\"hora\\\">\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"motivo\\\">Motivo</label>\\r\\n        <textarea id=\\\"motivo\\\" rows=\\\"4\\\" class=\\\"form-control\\\" placeholder=\\\"Escriba el motivo de reprogramacion\\\" formControlName=\\\"motivo\\\"></textarea>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n  <div class=\\\"card-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\"\\r\\n            (click)=\\\"close(modal)\\\">Save</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\"","import { Component, ElementRef, OnInit, ViewChild, Input } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Programacion } from '../../../interfaces/programacion.interface';\nimport { ProgramacionService } from '../../../services/freelance/programacion.service';\nimport { DataService } from '../../../services/data.service';\nimport { forkJoin } from 'rxjs';\nimport { FreelanceService } from '../../../services/freelance/freelance.service';\n\n@Component({\n  selector: 'app-programacion',\n  templateUrl: './programacion.component.html',\n  styles: []\n})\nexport class ProgramacionComponent implements OnInit {\n\n  form = this.fb.group({\n    fecha : [ '', Validators.required ],\n    hora  : [ '', Validators.required ],\n  });\n\n  data: Programacion;\n  isLoadData = false;\n\n  vsdId;\n\n  constructor(\n    private fb: FormBuilder,\n    private modalService: NgbModal,\n    private programacionService: ProgramacionService,\n    private dataService: DataService,\n    private freelanceService: FreelanceService,\n  ) { }\n\n  ngOnInit() {\n\n    const espId = this.freelanceService.getEsp().id;\n    this.dataService.getVsd(espId).subscribe(\n      (response: any) => {\n        this.vsdId = response.id;\n\n        this.programacionService.get(this.vsdId).subscribe(\n          (response: Programacion) => {\n            this.data = response;\n            this.isLoadData = true;\n          });\n      }\n    );\n  }\n\n  programar() {\n    const data = this.form.value;\n    this.programacionService.guardar(this.vsdId, data).subscribe(\n      () => {\n        alert('Programación creada con exito');\n        window.location.reload();\n      },\n      () => alert('Ocurrio un error, intente mas tarde')\n    )\n\n\n\n    \n  }\n\n  reprogramar() {\n    const data = {\n      id: this.data.id,\n      ...this.form.value,\n    };\n\n    this.programacionService.actualizar(this.vsdId, data).subscribe(\n      () => alert('Programación actualizada con exito'),\n      () => alert('Ocurrio un error, intente mas tarde')\n    )\n  }\n\n  open(content) {\n    this.form.addControl('motivo', this.fb.control('', Validators.required));\n    this.modalService.open(content);\n  }\n\n  close(content) {\n    content.close();\n  }\n\n}\n","module.exports = \"<div class=\\\"col-md-11 mx-auto m-4\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header bg-white\\\">\\n      <i class=\\\"fa fa-mail-bulk\\\"></i>\\n      Seguimiento\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <form [formGroup]=\\\"form\\\" *ngIf=\\\"!isLoadData\\\">\\n        <div class=\\\"form-group row\\\">\\n          <label for=\\\"correo\\\" class=\\\"col-form-label col-md-3\\\">\\n            Correo de contacto\\n          </label>\\n          <input type=\\\"text\\\" class=\\\"form-control col-md-8\\\" id=\\\"correo\\\" formControlName=\\\"correo\\\"\\n                 placeholder=\\\"Ingrese el correo electronico del evaluado\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"alert alert-info\\\">\\n            <b>Correo recibido!</b>\\n            <p>Fecha y hora de recibido: <b>fecha</b></p>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n    <div class=\\\"card-footer\\\">\\n      <button *ngIf=\\\"!isLoadData\\\" type=\\\"button\\\" class=\\\"btn btn-outline-primary mr-2\\\"\\n              (click)=\\\"enviarCorreo()\\\">Enviar correo\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { SeguimientoService } from '../../../../freelance/services/seguimiento.service';\n\n@Component({\n  selector: 'app-seguimiento',\n  templateUrl: './seguimiento.component.html',\n  styles: []\n})\nexport class SeguimientoComponent implements OnInit {\n\n  form: any;\n  isLoadData = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private seguimientoService: SeguimientoService,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  enviarCorreo() {\n\n  }\n}\n","module.exports = \"<div class=\\\"col-md-11 mx-auto m-4\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header bg-white\\\">\\n      <i class=\\\"fa fa-plus\\\"></i>\\n      Viaticos\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"alert alert-info mt-2\\\">\\n        <b>Tener en cuenta:</b>\\n        <p>Los viaticos solo se solicita cuando las visitas son fuera de la ciudad\\n        de residencia de la persona que entrevista. <br> Recuerde que se pagan segun tarifas\\n        de transporte publico e intermunicipal</p>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12 text-right mb-2\\\">\\n          <button class=\\\"btn btn-outline-success text-right mr-2\\\" (click)=\\\"open(mdRecorridos)\\\">\\n            <i class=\\\"fa fa-plus\\\"></i>\\n            Agregar\\n          </button>\\n          <button class=\\\"btn btn-outline-warning text-right mr-2\\\" (click)=\\\"open(mdRecorridos)\\\">\\n            <i class=\\\"fa fa-edit\\\"></i>\\n            Editar\\n          </button>\\n          <button class=\\\"btn btn-outline-danger text-right\\\" (click)=\\\"delete()\\\">\\n            <i class=\\\"fa fa-trash\\\"></i>\\n            Eliminar\\n          </button>\\n        </div>\\n      </div>\\n      <table class=\\\"table table-striped table-bordered\\\">\\n        <tr>\\n          <td>Seleccione</td>\\n          <td>Fecha de creación</td>\\n          <td>Recorrido</td>\\n          <td>Cantidad</td>\\n          <td>Estado</td>\\n        </tr>\\n        <tr *ngFor=\\\"let item of viaticos\\\">\\n          <td><input type=\\\"radio\\\" [value]=\\\"item.id\\\"></td>\\n          <td>{{ item.fechaCreacion }}</td>\\n          <td>{{ item.origen + item.destino }}</td>\\n          <td>{{ item.tarifa }}</td>\\n          <td>{{ item.estado }}</td>\\n        </tr>\\n      </table>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #mdRecorridos let-modal>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">Recorridos</h4>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"origen\\\">Lugar de órigen</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"origen\\\" placeholder=\\\"Ingrese el origen. Ej: Bogota\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"destino\\\">Lugar de destino</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"destino\\\" placeholder=\\\"Ingrese el destino. Ej: Mosquera\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"tarifa\\\">Tarifa</label>\\n      <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"tarifa\\\" placeholder=\\\"Ej: 5000\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn btn-success\\\">\\n      <i class=\\\"fa fa-plus\\\" (click)=\\\"addViatico()\\\"></i>\\n      CrearComponent recorrido\\n    </button>\\n    <button class=\\\"btn btn-dark\\\" (click)=\\\"modal.close()\\\">\\n      Cerrar\\n    </button>\\n  </div>\\n</ng-template>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n// import { FreelanceService } from '../../services/freelance.service';\nimport { FormBuilder, Validators } from '@angular/forms';\n// import { IViatico } from '../../interfaces/viatico.interface';\n\n@Component({\n  selector: 'app-viaticos',\n  templateUrl: './viaticos.component.html',\n  styles: []\n})\nexport class ViaticosComponent implements OnInit {\n\n  form = this.fb.group({\n    id: 0,\n    origen: ['', Validators.required],\n    destino: ['', Validators.required],\n    tarifa: ['', Validators.required],\n    fechaCreacion: '',\n    estado: '',\n  });\n\n  isLoadData = false;\n  viaticos = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private modalService: NgbModal,\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  addViatico() {\n\n  }\n\n  open(content) {\n    this.modalService.open(content);\n  }\n\n  delete() {\n\n  }\n}\n","module.exports = \"<div class=\\\"container-fluid mt-3\\\">\\n  <div class=\\\"card mb-3\\\">\\n    <div class=\\\"card-header\\\">\\n      <i class=\\\"fas fa-table\\\"></i> Control de gestión\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"table-responsive\\\">\\n        <ng-container [ngSwitch]=\\\"rol\\\">\\n          <app-cliente *ngSwitchCase=\\\"'CLI'\\\"></app-cliente>\\n          <app-freelance *ngSwitchCase=\\\"'FRCE'\\\"></app-freelance>\\n          <app-analista-esp *ngSwitchCase=\\\"'AESP'\\\"></app-analista-esp>\\n          <app-analista-esp *ngSwitchCase=\\\"'ADG'\\\"></app-analista-esp>\\n          <div *ngSwitchDefault class=\\\"alert alert-danger\\\">\\n            <p class=\\\"text-danger\\\">\\n              No tiene permisos para acceder a esta sección\\n            </p>\\n          </div>\\n        </ng-container>\\n        <router-outlet></router-outlet>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { LoginService } from '../../../../services/login.service';\nimport { AuthService } from '../../../../services/auth/auth.service';\nimport { Store } from '@ngrx/store';\nimport { RemoveServicios } from '../../store/actions/servicios.actions';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styles: []\n})\nexport class MainComponent implements OnInit, OnDestroy {\n\n  rol: string;\n\n  constructor(\n    private authService: AuthService,\n    private loginService: LoginService,\n    private store: Store<any>\n  ) { }\n\n  ngOnInit() {\n    // this.rol = this.loginService.rol.codigo;\n    this.rol = this.authService.getUser().user.rol.codigo;\n    console.log(this.rol);\n  }\n\n  ngOnDestroy() {\n    this.store.dispatch(new RemoveServicios());\n  }\n\n  \n\n}\n","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h5 class=\\\"modal-title\\\">Detalle del servicio</h5>\\n  <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"activeModal.close()\\\">\\n    <span>&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n  <fieldset disabled>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <!--evaluado-->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"m-evaluado\\\">Nombre del evaluado</label>\\n          <input type=\\\"text\\\" id=\\\"m-evaluado\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"servicio.evaluado.evaluado\\\">\\n        </div>\\n\\n        <!--tipo documento-->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"m-tipoDocumento\\\">Tipo de documento</label>\\n          <select class=\\\"form-control\\\" [(ngModel)]=\\\"servicio.evaluado.tipo_documento\\\" id=\\\"m-tipoDocumento\\\">\\n            <option value=\\\"cc\\\">C.C. Cedula</option>\\n            <option value=\\\"ti\\\">T.I. Tarjeta de identidad</option>\\n            <option value=\\\"ce\\\">C.E. Cedula de extrangeria</option>\\n            <option value=\\\"pa\\\">P.A. Pasaporte</option>\\n            <option value=\\\"pep\\\">P.E.P. Permiso especial de permanencia</option>\\n          </select>\\n        </div>\\n\\n        <!--documento-->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"m-documento\\\">Numero de documento</label>\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"m-documento\\\"  [(ngModel)]=\\\"servicio.evaluado.documento\\\">\\n        </div>\\n\\n        <!--lugar desarrollo-->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"m-ciudad\\\">Lugar de desarrollo</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"m-ciudad\\\"  [(ngModel)]=\\\"servicio.lugar_desarrollo\\\">\\n        </div>\\n\\n        <!--telefono-->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"m-telefono\\\">Telefono</label>\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"m-telefono\\\"  [(ngModel)]=\\\"servicio.evaluado.telefono\\\">\\n        </div>\\n\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n\\n        <!--email-->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"m-email\\\">Email</label>\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"m-email\\\"  [(ngModel)]=\\\"servicio.evaluado.email\\\">\\n        </div>\\n\\n        <!--cargo-->\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"m-email\\\">Cargo</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"m-email\\\"  [(ngModel)]=\\\"servicio.evaluado.cargo\\\">\\n          </div>\\n\\n        <!--observaciones-->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"m-obs\\\">Observaciones</label>\\n          <textarea\\n            rows=\\\"3\\\"\\n            class=\\\"form-control\\\"\\n            id=\\\"m-obs\\\"\\n            [(ngModel)]=\\\"servicio.observaciones\\\">\\n              </textarea>\\n        </div>\\n\\n        <!-- tipo servicio -->\\n        <div class=\\\"form-group\\\">\\n          <ng-container [ngSwitch]=\\\"servicio.tipoServicio\\\">\\n            <div *ngSwitchCase=\\\"'esp'\\\">\\n              <label>Tipo de esp</label>\\n              <div class=\\\"d-block\\\">\\n                <span class=\\\"badge badge-success\\\">{{ servicio.tipo_esp }}</span>\\n              </div>\\n            </div>\\n            <div *ngSwitchCase=\\\"'pol'\\\">\\n              <label>Tipo de poligrafia</label>\\n              <div class=\\\"d-block\\\">\\n                <span class=\\\"badge badge-success\\\">{{ servicio.tipo_poligrafia }}</span>\\n              </div>\\n            </div>\\n          </ng-container>\\n        </div>\\n\\n        <!-- anexo -->\\n        <div class=\\\"form-group\\\" *ngIf=\\\"servicio.anexo\\\">\\n          <div class=\\\"d-block\\\">\\n            <a [href]=\\\"makeFileUrl(servicio.anexo)\\\">\\n              <i class=\\\"fa fa-file\\\"></i>\\n              {{ servicio.anexo }}\\n            </a>\\n          </div>\\n          <label>Anexo</label>\\n        </div>\\n      </div>\\n    </div>\\n  </fieldset>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n  <button class=\\\"btn btn-secondary\\\" (click)=\\\"activeModal.close()\\\">\\n    <i class=\\\"fa fa-close\\\"></i>\\n    Cerrar\\n  </button>\\n</div>\\n\\n\\n\\n\"","import { Component, Input, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { HelperService } from '../../../../services/helper.service';\n\n@Component({\n  selector: 'app-detalle-servicio-modal',\n  templateUrl: './modal-servicio.component.html',\n  styles: []\n})\nexport class ModalServicioComponent implements OnInit {\n\n  @Input() servicio;\n\n  makeFileUrl(fileName: string) {\n    return this.helper.makeFileUrl(fileName);\n  }\n\n  constructor(\n    private activeModal: NgbActiveModal,\n    private helper: HelperService,\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MainComponent } from './components/main/main.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MainComponent,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ControlRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MainComponent } from './components/main/main.component';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { ClienteComponent } from './components/cliente/cliente.component';\nimport { FreelanceComponent } from './components/freelance/freelance.component';\nimport { AnalistaEspComponent } from './components/analista-esp/analista-esp.component';\nimport { FiltroComponent } from './components/filtro/filtro.component';\nimport { RouterModule } from '@angular/router';\nimport { ControlRoutingModule } from './control-routing.module';\nimport { reducers } from './store/reducers';\nimport { effects } from './store/effects';\nimport { ModalServicioComponent } from './components/modal-servicio/modal-servicio.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { DetalleActividadesComponent } from './components/detalle-actividades/detalle-actividades.component';\nimport { ProgramacionComponent } from './components/freelance/programacion/programacion.component';\nimport { SeguimientoComponent } from './components/freelance/seguimiento/seguimiento.component';\nimport { ViaticosComponent } from './components/freelance/viaticos/viaticos.component';\nimport { AdministradorComponent } from './components/administrador/administrador.component';\n\n@NgModule({\n  declarations: [\n    MainComponent,\n    ClienteComponent,\n    FreelanceComponent,\n    AnalistaEspComponent,\n    FiltroComponent,\n    ModalServicioComponent,\n    DetalleActividadesComponent,\n    ProgramacionComponent,\n    SeguimientoComponent,\n    ViaticosComponent,\n    AdministradorComponent,\n  ],\n  imports: [\n    NgbModule,\n    CommonModule,\n    ControlRoutingModule,\n    RouterModule,\n    StoreModule.forFeature('control', reducers),\n    EffectsModule.forFeature(effects),\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  entryComponents: [\n    ModalServicioComponent,\n    DetalleActividadesComponent,\n  ],\n})\nexport class ControlModule { }\n","import { Injectable } from '@angular/core';\nimport { forkJoin } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { EspService } from '../../shared/services';\nimport { InvestigacionService } from '../../shared/services';\nimport { PoligrafiaService } from '../../shared/services';\nimport { HelperService } from '../../../services/helper.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(\n    private espService: EspService,\n    private investigacionService: InvestigacionService,\n    private poligrafiaService: PoligrafiaService,\n    private http: HttpClient,\n    private helper: HelperService,\n  ) { }\n\n  fetchServicios() {\n    return forkJoin(\n      this.espService.fetch(),\n      // this.investigacionService.fetch(),\n      // this.poligrafiaService.fetch(),\n    ).pipe(\n      map((data: any) => data.flat()),\n    );\n  }\n\n  getVsd(espId) {\n    const url = this.helper.route(['esp', 'vsd'], espId);\n    return this.http.get(url);\n  }\n\n  asignarVisitaDom(actId, payload) {\n    const url = this.helper.route('actividad', actId);\n    return this.http.put(url, payload);\n  }\n\n  getFreelances() {\n    const url = this.helper.route('freelance');\n    return this.http.get(url).pipe(map((value: any) => value.data));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HelperService } from '../../../../services/helper.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FreelanceService {\n\n  constructor(\n    private http: HttpClient,\n    private helper: HelperService,\n  ) { }\n\n  setEsp(esp) {\n    localStorage.setItem('esp', JSON.stringify(esp));\n  }\n\n  getEsp() {\n    return JSON.parse(localStorage.getItem('esp'));\n  }\n\n\n  aceptarVisitaDom(espId, data) {\n    const url = this.helper.route(['esp', 'vsd'], espId);\n    return this.http.post(url, data);\n  }\n\n  rechazarVisitaDom(espId, data) {\n    const url = this.helper.route(['esp', 'vsd'], espId);\n    return this.http.post(url, data);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HelperService } from '../../../../services/helper.service';\nimport { catchError, map } from 'rxjs/operators';\nimport { Programacion } from '../../interfaces/programacion.interface';\nimport { EMPTY } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProgramacionService {\n\n  constructor(\n    private http: HttpClient,\n    private helper: HelperService,\n  ) { }\n\n  get(vsdId) {\n    const url = this.helper.route(['vsd', 'programacion'], 2);\n    return this.http.get(url).pipe(\n      map((data: any) => data.data),\n      catchError(() => EMPTY),\n    );\n  }\n\n  guardar(vsdId, payload) {\n    const url = this.helper.route(['vsd', 'programacion'], vsdId);\n    return this.http.post(url, payload);\n  }\n\n  actualizar(programacionId, payload) {\n    const url = this.helper.route('programacion', programacionId);\n    return this.http.put(url, payload);\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { Servicio } from '../../../../@models/servicio';\n\nexport enum ServiciosActionTypes {\n  FetchServicios = '[Servicios] Fetch Servicios',\n  LoadServicios = '[Servicios] Load Servicios',\n  RemoveServicios = '[Servicios] Remove Servicios',\n}\n\nexport class FetchServicios implements Action {\n  readonly type = ServiciosActionTypes.FetchServicios;\n}\n\nexport class LoadServicios implements Action {\n  readonly type = ServiciosActionTypes.LoadServicios;\n  constructor(public payload: Servicio[]) {}\n}\n\nexport class RemoveServicios implements Action {\n  readonly type = ServiciosActionTypes.RemoveServicios;\n}\n\nexport type ServiciosActions =\n  FetchServicios\n  | LoadServicios\n  | RemoveServicios;\n","import { ServicioEffects } from './servicios.effects';\r\n\r\nexport const effects = [\r\n  ServicioEffects,\r\n];\r\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\n\nimport { concatMap, map, mergeMap, switchMap, tap } from 'rxjs/operators';\nimport { LoadServicios, ServiciosActions, ServiciosActionTypes } from '../actions/servicios.actions';\nimport { DataService } from '../../services/data.service';\n\n\n@Injectable()\nexport class ServicioEffects {\n\n  @Effect()\n  fetchServicios$ = this.actions$.pipe(\n    ofType(ServiciosActionTypes.FetchServicios),\n    mergeMap(() => this.controlService.fetchServicios().pipe(\n      map(value => new LoadServicios(value)),\n    )),\n  );\n\n  constructor(\n    private actions$: Actions,\n    private controlService: DataService,\n  ) {}\n\n}\n","import { serviciosReducer } from './servicios.reducer';\r\n\r\nexport const reducers = {\r\n  servicios: serviciosReducer,\r\n};\r\n","import { ServiciosActions, ServiciosActionTypes } from '../actions/servicios.actions';\nimport { Servicio } from '../../../../@models/servicio';\n\nexport function serviciosReducer(state: Servicio[] = [], action: ServiciosActions): Servicio[] {\n  switch (action.type) {\n\n    case ServiciosActionTypes.LoadServicios:\n      return [...state, ...action.payload ];\n\n    case ServiciosActionTypes.RemoveServicios:\n      return [];\n\n    default:\n      return state;\n  }\n}\n","export const getServicios = state => state.control.servicios;\r\nexport const getServicio = statate => statate.control.servicio;\r\n","import { Injectable } from '@angular/core';\nimport { HelperService } from '../../../services/helper.service';\nimport { Store } from '@ngrx/store';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SeguimientoService {\n\n  constructor(\n    private http: HttpClient,\n    private helper: HelperService,\n    private store: Store<any>,\n  ) { }\n\n  getSeguimiento() {\n    const url = this.helper.route(\n      ['visita-domiciliaria', 'seguimiento'],\n      1,\n    );\n\n    return this.http.get(url);\n  }\n\n  saveSeguimient(payload) {\n    const url = this.helper.route(\n      ['visita-domiciliaria', 'seguimiento'],\n      1,\n    );\n    return this.http.post(url, payload);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HelperService } from '../../services/helper.service';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActividadAplicadaService {\n\n  constructor(\n    private http: HttpClient,\n    private helper: HelperService,\n  ) { }\n\n  getFromEsp(espId) {\n    const url = this.helper.route(['esp', 'actividades-aplicadas'], espId);\n    return this.http.get(url).pipe(\n      map((value: any) => value.data)\n    );\n  }\n}\n"],"sourceRoot":""}